resources:
- name: cryogenics-concourse-tasks
  type: git
  icon: github
  source:
    uri: git@github.com:pivotal/cryogenics-concourse-tasks.git
    private_key: ((github.ssh_key))

- name: openldap-version
  type: uscan
  source:
    watchfile: |
      version=4
      https://www.openldap.org/software/download/OpenLDAP/openldap-release/ openldap-([\d\.]+)\.tgz

- name: every-hour
  type: time
  icon: clock-outline
  source:
    interval: 1h

- name: smith-env
  type: pcf-pool
  source:
    api_token: ((toolsmiths.api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment

- name: persi-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/persi-ci
    branch: master

- name: nfs-volume-release
  type: pull-request
  source:
    base_branch: master
    access_token: ((github.access_token))
    repository: cloudfoundry/nfs-volume-release
    disable_forks: true

- name: nfs-volume-release-bump
  type: git
  source:
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/nfs-volume-release.git

- name: nfs-volume-release-master
  type: git
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/nfs-volume-release.git

- name: nfsvolume-version
  type: semver
  source:
    access_key_id: ((aws/nfsvolume-uploader.id))
    bucket: nfsvolume-release-versions
    initial_version: 7.0.2
    key: current-version
    region_name: us-east-1
    secret_access_key: ((aws/nfsvolume-uploader.secret))

- name: github-release-nfs
  type: github-release
  source:
    user: cloudfoundry
    repository: nfs-volume-release
    drafts: true
    access_token: ((github.access_token))

- name: nfs-volume-release-concourse-tasks
  type: git
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/nfs-volume-release.git

- name: mapfs-release
  type: git
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/mapfs-release.git
    ignore_paths:
      - scripts

- name: mapfs-release-concourse-tasks
  type: git
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/mapfs-release.git

- name: cf-deployment
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-volume-services-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-volume-services-acceptance-tests.git

- name: cf-acceptance-tests
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github.access_token))

- name: disaster-recovery-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests.git

- name: golang-release
  type: git
  icon: tag
  source:
    uri: https://github.com/bosh-packages/golang-release.git
    tag_filter: v7*

- icon: github
  name: nfs-volume-release-bump-golang
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/nfs-volume-release.git
  type: git

- icon: github
  name: nfs-volume-release-bump-golang-master
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/nfs-volume-release.git
    disable_ci_skip: true
  type: git


resource_types:
- name: uscan
  source:
    repository: cflondonservices/concourse-uscan-resource
  type: registry-image

- name: git
  type: docker-image
  source:
    repository: concourse/git-resource
    tag: ubuntu

- name: pcf-pool
  type: docker-image
  source:
    repository: cftoolsmiths/toolsmiths-envs-resource

- name: pull-request
  type: docker-image
  source:
    repository: cryogenics/pr-queue-resource

jobs:
- name: bump-golang
  plan:
    - in_parallel:
        - get: cryogenics-concourse-tasks
        - get: golang-release
          trigger: true
        - get: nfs-volume-release-bump-golang-master
    - task: bosh-vendor-package
      file: cryogenics-concourse-tasks/deps-automation/bosh-vendor-package/task.yml
      input_mapping:
        release: nfs-volume-release-bump-golang-master
        vendored-package-release: golang-release
      params:
        VENDORED_PACKAGE_NAME: golang-1-linux
        VENDOR_UPDATES_BRANCH: golang-vendor-update-v7
        COMMIT_USERNAME: bump-golang CI job
        COMMIT_USEREMAIL: mapbu-cryogenics@groups.vmware.com
        AWS_ACCESS_KEY_ID: ((aws/nfsvolume-uploader.id))
        AWS_SECRET_ACCESS_KEY: ((aws/nfsvolume-uploader.secret))
    - put: nfs-volume-release-bump-golang
      params:
        repository: release-with-updated-vendored-package
        branch: golang-vendor-update-v7
    - task: create-golang-vendor-pull-request
      file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
      params:
        BASE: master
        BRANCH: golang-vendor-update-v7
        LABELS: ci,bump-golang
        TITLE: Update vendored package golang-1-linux
        MESSAGE: |
          This is an automatically generated Pull Request from the Cryogenics CI Bot.
          I have detected a new version of [golang-release](https://github.com/bosh-packages/golang-release) and automatically bumped
          this package to benefit from the latest changes.
          If this does not look right, please reach out to the [#mapbu-cryogenics](https://vmware.slack.com/archives/C01DXEYRKRU) team.
      input_mapping:
        source-repo: nfs-volume-release-bump-golang

- name: bump-openldap
  plan:
    - in_parallel:
      - get: openldap-version
        trigger: true
      - get: nfs-volume-release-master
      - get: cryogenics-concourse-tasks
    - load_var: openldap
      file: openldap-version/version
      format: json
    - task: bump-openldap
      config:
        params:
          S3_ACCESS_KEY_ID: ((aws/nfsvolume-uploader.id))
          S3_ACCESS_KEY: ((aws/nfsvolume-uploader.secret))
          GIT_AUTHOR_NAME: &git_author_name 'Cryogenics CI Bot'
          GIT_AUTHOR_EMAIL: &git_author_email 'mapbu-cryogenics@groups.vmware.com'
          GIT_COMMITTER_NAME: *git_author_name
          GIT_COMMITTER_EMAIL: *git_author_email

        platform: linux

        image_resource:
          type: docker-image
          source:
            repository: cryogenics/essentials-cf6

        inputs:
          - name: nfs-volume-release-master
        outputs:
          - name: nfs-volume-release-master

        run:
          path: /bin/sh
          args:
            - -c
            - |
              set -eu
              
              set -x

              [ -d nfs-volume-release-master ]

              cd nfs-volume-release-master

              ./scripts/bump-openldap ((.:openldap.version.ref))

  on_success:
    do:
    - put: nfs-volume-release-bump
      params:
        repository: nfs-volume-release-master
        force: true
        branch: &openldap-bump-branch bump-openldap-to-version-((.:openldap.version.ref))

    - task: create-pull-request
      file: cryogenics-concourse-tasks/tasks/create-pr/task.yml
      input_mapping:
        repo: nfs-volume-release-bump
      params:
        GITHUB_TOKEN: ((github.access_token))
        BASE: master
        BRANCH: *openldap-bump-branch
        TITLE: "Bump OpenLDAP to version ((.:openldap.version.ref))"

- name: nfs-volume-release-job-tests
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: persi-ci
          - get: nfs-volume-release-concourse-tasks
          - get: mapfs-release
          - get: nfs-volume-release
            trigger: true
    - task: rspec
      file: persi-ci/scripts/ci/run-rspec.build.yml
      input_mapping:
        test-repo: nfs-volume-release
    - task: bosh-release-test
      attempts: 3
      file: nfs-volume-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
      privileged: true

- name: mapfs-release-job-tests
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: mapfs-release
            trigger: true
          - get: mapfs-release-concourse-tasks
    - task: bosh-release-test
      file: mapfs-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
      privileged: true
      timeout: 1h

- name: env-gate
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        trigger: true
        passed:
        - nfs-volume-release-job-tests
      - get: mapfs-release
        passed:
        - mapfs-release-job-tests
      - get: every-hour

- name: claim-env-for-jammy
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: nfs-volume-release
        trigger: true
        passed:
          - env-gate
      - get: mapfs-release
        trigger: true
        passed:
          - env-gate
  - put: smith-env
    params:
      action: claim
  - task: output-env-details
    file: persi-ci/scripts/ci/claim-pooled-env.build.yml
    input_mapping:
      pooled-env: smith-env

- name: deploy-cf-with-jammy
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smith-env
        passed: [ claim-env-for-jammy ]
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment
      - get: persi-ci
      - get: nfs-volume-release
        passed: [ claim-env-for-jammy ]
      - get: mapfs-release
        passed: [ claim-env-for-jammy ]
  - task: update-dns-runtime-config-to-include-jammy
    input_mapping:
      toolsmiths-env: smith-env
    config:
      platform: linux

      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: latest

      inputs:
        - name: cf-deployment-concourse-tasks
        - name: toolsmiths-env

      run:
        path: /bin/bash
        args:
          - -c
          - |
            set -euo pipefail

            source cf-deployment-concourse-tasks/shared-functions

            setup_bosh_env_vars

            ADD_JAMMY_TO_DNS_CONFIG="$(mktemp)"

            cat << EOF > "$ADD_JAMMY_TO_DNS_CONFIG"
            ---
            - type: replace
              path: /addons/name=bosh-dns/include/stemcell/-
              value:
                os: ubuntu-jammy
            EOF

            bosh -n update-runtime-config --name=dns --ops-file="$ADD_JAMMY_TO_DNS_CONFIG" <( bosh runtime-config --name=dns )
  - task: collect-persi-ci-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    params:
      GENERATE_NFS_VARS: true
      GENERATE_SMB_VARS: false
  - task: bosh-deploy-cf
    file: persi-ci/scripts/ci/deploy-cf-with-multiple-releases.build.yml
    input_mapping:
      cf-deployment: cf-deployment
      toolsmiths-env: smith-env
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      BOSH_DEPLOY_ARGS: '--fix-releases'
      VARS_FILES: "nfs-vars.yml"
      OPS_FILES: "operations/scale-to-one-az.yml
                  operations/experimental/use-jammy.yml
                  operations/enable-nfs-volume-service.yml
                  updated-nfs-releases.yml
                  operations/test/enable-nfs-test-server.yml
                  operations/backup-and-restore/enable-backup-restore.yml
                  operations/backup-and-restore/enable-restore-nfs-broker.yml
                  operations/experimental/fast-deploy-with-downtime-and-danger.yml"
  - task: run-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: smoke_tests
  - task: run-nfs-broker-errand
    attempts: 3
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: nfsbrokerpush
      INSTANCE: nfs-broker-push

- name: cats-nfs-with-jammy
  serial_groups:
    - acceptance-tests-with-jammy
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: nfs-volume-release
            passed: [ deploy-cf-with-jammy ]
            trigger: true
          - get: smith-env

            passed: [ deploy-cf-with-jammy ]
            trigger: true
          - get: persi-ci
          - get: cf-acceptance-tests
          - get: cf-deployment-concourse-tasks
    - task: generate-cats-config
      file: persi-ci/scripts/ci/generate_cats_config.build.yml

      params:
        VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
        CF_USERNAME: admin
        SERVICE_NAME: nfs
        PLAN_NAME: Existing
        TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
    - task: run-cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: cats-config
      params:
        CONFIG_FILE_PATH: cats.json

- name: drats-with-jammy
  serial: true
  serial_groups:
    - acceptance-tests-with-jammy
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: nfs-volume-release
            passed: [ deploy-cf-with-jammy ]
            trigger: true
          - get: bbr-binary-release
          - get: disaster-recovery-acceptance-tests
          - get: persi-ci
          - get: smith-env

            passed: [ deploy-cf-with-jammy ]
            trigger: true
    - task: generate-integration-config
      file: persi-ci/scripts/ci/generate-drats-integration-config.build.yml
      params:
        INTEGRATION_CONFIG_FILE_PATH: config/drats-nfs.json
      input_mapping:
        integration-configs: persi-ci

    - task: drats-with-integration-config
      file: disaster-recovery-acceptance-tests/ci/tasks/drats-with-integration-config/task.yml
      privileged: true
      input_mapping:
        drats-integration-config: updated-integration-configs
      params:
        CONFIG_FILE_PATH: config/drats-nfs.json

- name: pats-with-jammy
  serial_groups:
    - acceptance-tests-with-jammy
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: smith-env

        passed: [ deploy-cf-with-jammy ]
        trigger: true
      - get: nfs-volume-release
        passed: [ deploy-cf-with-jammy ]
      - get: mapfs-release
        passed: [ deploy-cf-with-jammy ]
  - task: generate-pats-config-nfs

    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    params:
      VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
      TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
      CF_USERNAME: admin
      BIND_BOGUS_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      BIND_CONFIG: '["{\"uid\":\"1000\",\"gid\":\"1000\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"mount\": \"/var/vcap/data/foo\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"3.0\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.0\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.1\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.2\"}"]'
      CREATE_BOGUS_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/nonexistensevol\"}'
      CREATE_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/users\"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
    output_mapping:
      pats-config: nfs-pats-config
  - task: run-pats-nfs
    input_mapping:
      pats-config: nfs-pats-config
    file: persi-ci/scripts/ci/run-pats.build.yml
    attempts: 3
    params:
      PARALLEL_NODES: 5
      TEST_MOUNT_FAIL_LOGGING: true
      TEST_MOUNT_OPTIONS: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: unclaim-env-with-jammy
  plan:
  - get: smith-env
    passed:
    - pats-with-jammy
    - drats-with-jammy
    - cats-nfs-with-jammy
    trigger: true
  - put: smith-env
    params:
      action: unclaim
      env_file: smith-env/metadata

- name: claim-env
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: nfs-volume-release
        trigger: true
        passed:
          - env-gate
      - get: mapfs-release
        trigger: true
        passed:
          - env-gate
  - put: smith-env
    params:
      action: claim
  - task: output-env-details
    file: persi-ci/scripts/ci/claim-pooled-env.build.yml
    input_mapping:
      pooled-env: smith-env

- name: claim-ldap-env
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: persi-ci
          - get: nfs-volume-release
            trigger: true
            passed:
              - env-gate
          - get: mapfs-release
            trigger: true
            passed:
              - env-gate
    - put: smith-env
      params:
        action: claim

    - task: output-env-details
      file: persi-ci/scripts/ci/claim-pooled-env.build.yml
      input_mapping:
        pooled-env: smith-env

- name: deploy-cf
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smith-env

        passed: [ claim-env ]
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment
      - get: persi-ci
      - get: nfs-volume-release
        passed: [ claim-env ]
      - get: mapfs-release
        passed: [ claim-env ]
  - task: pin-cf-deployment-version
    file: persi-ci/scripts/ci/pin_cf_deployment_version.build.yml
    input_mapping:
      toolsmiths-env: smith-env
  - task: collect-persi-ci-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    params:
      GENERATE_NFS_VARS: true
      GENERATE_SMB_VARS: false
  - task: bosh-deploy-cf
    file: persi-ci/scripts/ci/deploy-cf-with-multiple-releases.build.yml
    input_mapping:
      cf-deployment: cf-deployment
      toolsmiths-env: smith-env
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      VARS_FILES: "nfs-vars.yml"
      OPS_FILES: "operations/use-compiled-releases.yml
                  operations/scale-to-one-az.yml
                  operations/enable-nfs-volume-service.yml
                  updated-nfs-releases.yml
                  operations/test/enable-nfs-test-server.yml
                  operations/backup-and-restore/enable-backup-restore.yml
                  operations/backup-and-restore/enable-restore-nfs-broker.yml
                  operations/experimental/fast-deploy-with-downtime-and-danger.yml"
  - task: run-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: smoke_tests
  - task: run-nfs-broker-errand
    attempts: 3
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: nfsbrokerpush
      INSTANCE: nfs-broker-push

- name: cats-nfs
  serial_groups:
    - acceptance-tests
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: nfs-volume-release
            passed: [ deploy-cf ]
            trigger: true
          - get: smith-env

            passed: [ deploy-cf ]
            trigger: true
          - get: persi-ci
          - get: cf-acceptance-tests
          - get: cf-deployment-concourse-tasks
    - task: generate-cats-config
      file: persi-ci/scripts/ci/generate_cats_config.build.yml

      params:
        VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
        CF_USERNAME: admin
        SERVICE_NAME: nfs
        PLAN_NAME: Existing
        TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
    - task: run-cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: cats-config
      params:
        CONFIG_FILE_PATH: cats.json

- name: drats
  serial: true
  serial_groups:
    - acceptance-tests
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: nfs-volume-release
            passed: [ deploy-cf ]
            trigger: true
          - get: bbr-binary-release
          - get: disaster-recovery-acceptance-tests
          - get: persi-ci
          - get: smith-env

            passed: [ deploy-cf ]
            trigger: true
    - task: generate-integration-config
      file: persi-ci/scripts/ci/generate-drats-integration-config.build.yml
      params:
        INTEGRATION_CONFIG_FILE_PATH: config/drats-nfs.json
      input_mapping:
        integration-configs: persi-ci

    - task: drats-with-integration-config
      file: disaster-recovery-acceptance-tests/ci/tasks/drats-with-integration-config/task.yml
      privileged: true
      input_mapping:
        drats-integration-config: updated-integration-configs
      params:
        CONFIG_FILE_PATH: config/drats-nfs.json

- name: pats
  serial_groups:
    - acceptance-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: smith-env

        passed: [ deploy-cf ]
        trigger: true
      - get: nfs-volume-release
        passed: [ deploy-cf ]
      - get: mapfs-release
        passed: [ deploy-cf ]
  - task: generate-pats-config-nfs

    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    params:
      VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
      TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
      CF_USERNAME: admin
      BIND_BOGUS_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      BIND_CONFIG: '["{\"uid\":\"1000\",\"gid\":\"1000\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"mount\": \"/var/vcap/data/foo\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"3.0\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.0\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.1\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.2\"}"]'
      CREATE_BOGUS_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/nonexistensevol\"}'
      CREATE_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/users\"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
    output_mapping:
      pats-config: nfs-pats-config
  - task: run-pats-nfs
    input_mapping:
      pats-config: nfs-pats-config
    file: persi-ci/scripts/ci/run-pats.build.yml
    attempts: 3
    params:
      PARALLEL_NODES: 5
      TEST_MOUNT_FAIL_LOGGING: true
      TEST_MOUNT_OPTIONS: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: deploy-cf-with-ldap
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smith-env

        passed:
        - claim-ldap-env
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment
      - get: persi-ci
      - get: nfs-volume-release
        passed:
        - claim-ldap-env
      - get: mapfs-release
        passed:
        - claim-ldap-env
  - task: pin-cf-deployment-version
    file: persi-ci/scripts/ci/pin_cf_deployment_version.build.yml
    input_mapping:
      toolsmiths-env: smith-env
  - task: collect-persi-ci-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    params:
      GENERATE_NFS_VARS: true
      GENERATE_SMB_VARS: false
      LDAP_HOST: "nfstestldapserver.service.cf.internal"
      LDAP_SVC_USER: "cn=admin,dc=domain,dc=com"
      LDAP_SVC_PASS: "secret"
      LDAP_PORT: 636
      LDAP_PROTO: tcp
      LDAP_USER_FQDN: "ou=Users,dc=domain,dc=com"
  - task: bosh-deploy-cf
    file: persi-ci/scripts/ci/deploy-cf-with-multiple-releases.build.yml
    input_mapping:
      toolsmiths-env: smith-env
      cf-deployment: cf-deployment
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      VARS_FILES: "nfs-vars.yml"
      OPS_FILES: "operations/use-compiled-releases.yml
                  operations/scale-to-one-az.yml
                  operations/enable-nfs-volume-service.yml
                  updated-nfs-releases.yml
                  operations/enable-nfs-ldap.yml
                  operations/test/enable-nfs-test-server.yml
                  operations/test/enable-nfs-test-ldapserver.yml
                  operations/experimental/fast-deploy-with-downtime-and-danger.yml"
  - task: run-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: smoke_tests
  - task: run-nfs-broker-errand
    attempts: 3
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: nfsbrokerpush
      INSTANCE: nfs-broker-push

- name: pats-nfs-ldap
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smith-env

        passed:
        - deploy-cf-with-ldap
        trigger: true
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: nfs-volume-release
        passed:
        - deploy-cf-with-ldap
      - get: mapfs-release
        passed:
        - deploy-cf-with-ldap
  - in_parallel:
      fail_fast: true
      steps:
      - task: generate-legacy-pats-config

        file: persi-ci/scripts/ci/generate_pats_config.build.yml
        params:
          VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
          TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
          BIND_CONFIG: '["{\"username\":\"user1000\",\"password\":\"secret\"}"]'
          CREATE_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/users\"}'
          DISALLOWED_LDAP_BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
          PLAN_NAME: Existing
          SERVICE_NAME: nfs-legacy
        output_mapping:
          pats-config: nfs-legacy-pats-config
      - task: generate-pats-config

        file: persi-ci/scripts/ci/generate_pats_config.build.yml
        params:
          VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
          TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
          BIND_CONFIG: '["{\"username\":\"user1000\",\"password\":\"secret\"}"]'
          CREATE_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/users\"}'
          DISALLOWED_LDAP_BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
          PLAN_NAME: Existing
          SERVICE_NAME: nfs
        output_mapping:
          pats-config: nfs-pats-config
  - in_parallel:
      fail_fast: true
      steps:
      - task: run-legacy-pats
        input_mapping:
          pats-config: nfs-legacy-pats-config
        file: persi-ci/scripts/ci/run-pats.build.yml
        params:
          TEST_DOCKER_PORA: true
      - task: run-pats
        input_mapping:
          pats-config: nfs-pats-config
        file: persi-ci/scripts/ci/run-pats.build.yml
        params:
          TEST_DOCKER_PORA: true

- name: unclaim-env
  plan:
  - get: smith-env
    passed:
    - pats
    - drats
    - cats-nfs
    trigger: true
  - put: smith-env
    params:
      action: unclaim
      env_file: smith-env/metadata

- name: unclaim-ldap-env
  plan:
    - get: smith-env

      passed:
        - pats-nfs-ldap
      trigger: true
    - put: smith-env
      params:
        action: unclaim
        env_file: smith-env/metadata

- name: merge-pr
  plan:
  - get: nfs-volume-release
    trigger: true
    passed:
    - pats-with-jammy
    - drats-with-jammy
    - cats-nfs-with-jammy
    - pats-nfs-ldap
    - pats
    - drats
    - cats-nfs
  - put: nfs-volume-release
    params:
      merge: true
      repository: nfs-volume-release

- name: shipit-nfs
  serial_groups:
    - nfs-version
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: persi-ci
          - get: cryogenics-concourse-tasks
          - get: release
            resource: nfs-volume-release-master
          - get: version
            resource: nfsvolume-version
            params:
              bump: final
    - task: create-final-release
      file: cryogenics-concourse-tasks/bosh-tasks/create-release/task.yml
      input_mapping:
        release-repo: release
      output_mapping:
        updated-release-repo: nfs-final-release
        updated-release-tarball: nfs-final-release-tarball
      params:
        AWS_ACCESS_KEY_ID: ((aws/nfsvolume-uploader.id))
        AWS_SECRET_ACCESS_KEY: ((aws/nfsvolume-uploader.secret))
        GIT_USERNAME: ((github.user))
        GIT_EMAIL: ((github.email))
        FINAL: true
        RELEASE_NAME: nfs-volume
    - task: create-release-notes
      file: cryogenics-concourse-tasks/release-automation/release-notes/task.yml
      input_mapping:
        git-repo: release
      params:
        USE_LATEST_PUBLISHED_TAG: true
    - task: format-release-notes
      file: cryogenics-concourse-tasks/release-automation/format-release-notes/task.yml
      input_mapping:
        template-folder: cryogenics-concourse-tasks
      params:
        TEMPLATE_PATH: release-automation/release-notes-templates/release-notes-auto.md.erb
    - put: nfs-volume-version
      resource: nfsvolume-version
      params:
        file: version/number
    - put: nfs-volume-release-master
      params:
        repository: nfs-final-release
        tag: version/number
        tag_prefix: v
    - put: github-release-nfs
      params:
        name: version/number
        tag: version/number
        body: release-notes/release-notes.md
        tag_prefix: v
        globs:
          - nfs-final-release-tarball/nfs-volume-*.tgz
    - put: nfsvolume-version
      params:
        bump: patch

- name: manual-bump-nfs-patch
  serial_groups:
    - nfs-version
  plan:
    - get: nfs-volume-version
      resource: nfsvolume-version
      params:
        bump: final
    - put: nfsvolume-version
      params:
        bump: patch

- name: manual-bump-nfs-minor
  serial_groups:
    - nfs-version
  plan:
    - get: nfs-volume-version
      resource: nfsvolume-version
      params:
        bump: final
    - put: nfsvolume-version
      params:
        bump: minor

- name: manual-bump-nfs-major
  serial_groups:
    - nfs-version
  plan:
    - get: nfs-volume-version
      resource: nfsvolume-version
      params:
        bump: final
    - put: nfsvolume-version
      params:
        bump: major
