---
number_of_retries: &number_of_retries 2

groups:
- name: test
  jobs:
  - nfs-volume-release-job-tests
  - mapfs-release-job-tests
  - env-gate
  - claim-env
  - deploy-cf
  - cats-nfs
  - drats
  - pats
  - unclaim-env
  - claim-ldap-env
  - deploy-cf-with-ldap
  - pats-nfs-ldap
  - unclaim-ldap-env
  - merge-pr
- name: bump
  jobs:
  - bump-golang
  - update-go-directive-for-mapfs
  - update-go-directive-for-mapfs-release
- name: release
  jobs:
  - shipit-mapfs
  - manual-bump-mapfs-patch
  - manual-bump-mapfs-minor
  - manual-bump-mapfs-major

resources:
- name: every-hour
  type: time
  icon: clock-outline
  source:
    interval: 1h

- name: smith-env
  type: pcf-pool
  source:
    api_token: ((toolsmiths.api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment

- name: persi-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/persi-ci
    branch: master

- name: nfs-volume-release
  type: git
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/nfs-volume-release.git
    ignore_paths:
    - scripts

- name: nfs-volume-release-concourse-tasks
  type: git
  source:
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/nfs-volume-release.git

- name: mapfs
  type: git
  source:
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/mapfs.git

- name: mapfs-release
  type: pull-request
  source:
    base_branch: master
    access_token: ((github.access_token))
    repository: cloudfoundry/mapfs-release
    disable_forks: true

- name: mapfs-release-master
  type: git
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/mapfs-release.git
    ignore_paths:
    - scripts

- name: mapfs-version
  type: semver
  source:
    access_key_id: ((aws/mapfs-uploader.id))
    bucket: mapfs-versions
    initial_version: 1.2.4
    key: current-version
    region_name: us-east-1
    secret_access_key: ((aws/mapfs-uploader.secret))

- name: github-release-mapfs
  type: github-release
  source:
    user: cloudfoundry
    repository: mapfs-release
    drafts: true
    access_token: ((github.access_token))

- name: mapfs-release-concourse-tasks
  type: git
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/mapfs-release.git

- name: cf-deployment
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-volume-services-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-volume-services-acceptance-tests.git

- name: cf-acceptance-tests
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github.access_token))

- name: disaster-recovery-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests.git

- name: golang-release
  type: git
  icon: tag
  source:
    uri: https://github.com/bosh-packages/golang-release.git
    tag_filter: v*

- icon: github
  name: mapfs-release-bump-golang
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/mapfs-release.git
  type: git

- icon: github
  name: mapfs-release-bump-golang-master
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/mapfs-release.git
    disable_ci_skip: true
  type: git

- name: cryogenics-concourse-tasks
  type: git
  icon: github
  source:
    uri: git@github.com:pivotal/cryogenics-concourse-tasks.git
    private_key: ((github.ssh_key))
    branch: main

resource_types:
- name: git
  type: docker-image
  source:
    repository: concourse/git-resource
    tag: ubuntu

- name: pcf-pool
  type: docker-image
  source:
    repository: cftoolsmiths/toolsmiths-envs-resource

- name: pull-request
  type: docker-image
  source:
    repository: cryogenics/pr-queue-resource

jobs:
- name: bump-golang
  plan:
  - in_parallel:
    - get: cryogenics-concourse-tasks
    - get: golang-release
      trigger: true
    - get: mapfs-release-bump-golang-master
  - load_var: golang-release-version
    file: golang-release/.git/describe_ref
  - task: bosh-vendor-package
    file: cryogenics-concourse-tasks/deps-automation/bosh-vendor-package/task.yml
    input_mapping:
      release: mapfs-release-bump-golang-master
      vendored-package-release: golang-release
    params:
      VENDORED_PACKAGE_NAME: golang-1-linux
      VENDOR_UPDATES_BRANCH: &golang-vendor-branch bump-golang-vendor-((.:golang-release-version))
      COMMIT_USERNAME: bump-golang CI job
      COMMIT_USEREMAIL: mapbu-cryogenics@groups.vmware.com
      AWS_ACCESS_KEY_ID: ((aws/mapfs-uploader.id))
      AWS_SECRET_ACCESS_KEY: ((aws/mapfs-uploader.secret))
  - put: mapfs-release-bump-golang
    params:
      repository: release-with-updated-vendored-package
      branch: *golang-vendor-branch
      force: true  # If the last PR got stuck just overwrite it with new stuff
  - try:
      # We've seen cases where there are 2 or more new releases of
      # golang-release which causes this job to trigger 2x or more. A PR will
      # be created on the 1st build. On the following ones, it is possible
      # that this task will fail as there exist already a PR (which is
      # probably flowing through the pipeline). To prevent this scenario
      # we're making this step best-effort.
      # This also makes the job idempotent. If we re-trigger the job but if
      # there are no new version of golang-release, this step will fail
      # saying "Your branch is up-to-date with
      # 'origin/golang-vendor-update'."
      task: create-golang-vendor-pull-request
      file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
      params:
        BASE: master
        BRANCH: *golang-vendor-branch
        LABELS: dependencies
        TITLE: Update vendored package golang-1-linux
        MESSAGE: "This is an automatically generated Pull Request from the Cryogenics CI Bot.\
          \nI have detected a new version of [golang-release](https://github.com/bosh-packages/golang-release) and \
          automatically bumped\nthis package to benefit from the latest changes.\
          \nIf this does not look right, please reach out to the \
          [#mapbu-cryogenics](https://vmware.slack.com/archives/C01DXEYRKRU) team.\n"
      input_mapping:
        source-repo: mapfs-release-bump-golang

- name: update-go-directive-for-mapfs
  plan:
  - in_parallel:
    - get: golang-release
      trigger: true
      passed:
      - bump-golang
    - get: cryogenics-concourse-tasks
    - get: mapfs
  - task: update-go-directive
    file: cryogenics-concourse-tasks/tasks/bosh/update-go-directive/task.yml
    input_mapping:
      bosh-release-repo-with-vendored-golang: golang-release
      golang-project-repo: mapfs
    output_mapping:
      golang-project-repo: mapfs
    params:
      COMMIT_USERNAME: bump-golang CI job
      COMMIT_USEREMAIL: mapbu-cryogenics@groups.vmware.com
      PATH_TO_GO_MODULE: .
  - load_var: golang-release-version
    file: golang-release/.git/describe_ref
  - put: mapfs
    params:
      repository: mapfs
      branch: &mapfs-gomod-update-branch bump-golang-vendor-((.:golang-release-version))
      force: true  # If the last PR got stuck just overwrite it with new stuff
  - task: create-gomod-directive-update-pull-request
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      BASE: master
      BRANCH: *mapfs-gomod-update-branch
      LABELS: dependencies
      TITLE: Update gomod directive
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI
        Bot. I have detected a new version of
        [golang-release](https://github.com/bosh-packages/golang-release) and
        automatically updated the go mod directive for this go module. If this
        does not look right, please reach out to the
        [#mapbu-cryogenics](https://vmware.slack.com/archives/C01DXEYRKRU)
        team.
    input_mapping:
      source-repo: mapfs

- name: update-go-directive-for-mapfs-release
  plan:
  - in_parallel:
    - get: golang-release
      trigger: true
      passed:
      - bump-golang
    - get: cryogenics-concourse-tasks
    - get: mapfs-release-master
  - task: update-go-directive
    file: cryogenics-concourse-tasks/tasks/bosh/update-go-directive/task.yml
    input_mapping:
      bosh-release-repo-with-vendored-golang: golang-release
      golang-project-repo: mapfs-release-master
    output_mapping:
      golang-project-repo: mapfs-release-master
    params:
      COMMIT_USERNAME: bump-golang CI job
      COMMIT_USEREMAIL: mapbu-cryogenics@groups.vmware.com
      PATH_TO_GO_MODULE: src/bosh_release
  - load_var: golang-release-version
    file: golang-release/.git/describe_ref
  - put: mapfs-release-master
    params:
      repository: mapfs-release-master
      branch: &mapfs-release-gomod-update-branch bump-release-golang-vendor-((.:golang-release-version))
      force: true  # If the last PR got stuck just overwrite it with new stuff
  - task: create-gomod-directive-update-pull-request
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      BASE: master
      BRANCH: *mapfs-release-gomod-update-branch
      LABELS: dependencies
      TITLE: Update gomod directive
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI
        Bot. I have detected a new version of
        [golang-release](https://github.com/bosh-packages/golang-release) and
        automatically updated the go mod directive for this go module. If this
        does not look right, please reach out to the
        [#mapbu-cryogenics](https://vmware.slack.com/archives/C01DXEYRKRU)
        team.
    input_mapping:
      source-repo: mapfs-release-master

- name: nfs-volume-release-job-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: nfs-volume-release-concourse-tasks
      - get: mapfs-release
        trigger: true
      - get: nfs-volume-release
  - task: rspec
    file: persi-ci/scripts/ci/run-rspec.build.yml
    input_mapping:
      test-repo: nfs-volume-release
  - task: bosh-release-test
    attempts: *number_of_retries
    file: nfs-volume-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
    privileged: true

- name: mapfs-release-job-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: mapfs-release
        trigger: true
      - get: mapfs-release-concourse-tasks
  - task: bosh-release-test
    file: mapfs-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
    privileged: true
    timeout: 1h

- name: env-gate
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed:
        - nfs-volume-release-job-tests
      - get: mapfs-release
        trigger: true
        passed:
        - nfs-volume-release-job-tests
        - mapfs-release-job-tests
      - get: every-hour

- name: claim-env
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: nfs-volume-release
        passed:
        - env-gate
      - get: mapfs-release
        trigger: true
        passed:
        - env-gate
  - put: smith-env
    params:
      action: claim

  - task: output-env-details
    file: persi-ci/scripts/ci/claim-pooled-env.build.yml
    input_mapping:
      pooled-env: smith-env

- name: claim-ldap-env
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: nfs-volume-release
        passed:
        - env-gate
      - get: mapfs-release
        trigger: true
        passed:
        - env-gate
  - put: smith-env
    params:
      action: claim

  - task: output-env-details
    file: persi-ci/scripts/ci/claim-pooled-env.build.yml
    input_mapping:
      pooled-env: smith-env

- name: deploy-cf
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smith-env

        passed: [claim-env]
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment
      - get: persi-ci
      - get: nfs-volume-release
        passed: [claim-env]
      - get: mapfs-release
        passed: [claim-env]
  - task: pin-cf-deployment-version
    file: persi-ci/scripts/ci/pin_cf_deployment_version.build.yml
    input_mapping:
      toolsmiths-env: smith-env
  - task: collect-persi-ci-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    params:
      GENERATE_NFS_VARS: true
      GENERATE_SMB_VARS: false
  - task: bosh-deploy-cf
    attempts: *number_of_retries
    file: persi-ci/scripts/ci/deploy-cf-with-multiple-releases.build.yml
    input_mapping:
      cf-deployment: cf-deployment
      toolsmiths-env: smith-env
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      VARS_FILES: "nfs-vars.yml"
      OPS_FILES: "operations/use-compiled-releases.yml
                  operations/scale-to-one-az.yml
                  operations/enable-nfs-volume-service.yml
                  updated-nfs-releases.yml
                  operations/test/enable-nfs-test-server.yml
                  operations/backup-and-restore/enable-backup-restore.yml
                  operations/backup-and-restore/enable-restore-nfs-broker.yml
                  operations/experimental/fast-deploy-with-downtime-and-danger.yml"
  - task: run-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: smoke_tests
  - task: run-nfs-broker-errand
    attempts: *number_of_retries
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: nfsbrokerpush
      INSTANCE: nfs-broker-push

- name: cats-nfs
  serial_groups:
  - acceptance-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed: [deploy-cf]
      - get: smith-env

        passed: [deploy-cf]
        trigger: true
      - get: persi-ci
      - get: cf-acceptance-tests
      - get: cf-deployment-concourse-tasks
      - get: mapfs-release
        passed: [deploy-cf]
  - task: generate-cats-config
    file: persi-ci/scripts/ci/generate_cats_config.build.yml

    params:
      VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
      CF_USERNAME: admin
      SERVICE_NAME: nfs
      PLAN_NAME: Existing
      TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
  - task: run-cats
    file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: cats-config
    params:
      CONFIG_FILE_PATH: cats.json

- name: drats
  serial: true
  serial_groups:
  - acceptance-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: nfs-volume-release
        passed: [deploy-cf]

      - get: bbr-binary-release
      - get: disaster-recovery-acceptance-tests
      - get: persi-ci
      - get: mapfs-release
        passed: [deploy-cf]
      - get: smith-env

        passed: [deploy-cf]
        trigger: true
  - task: generate-integration-config
    file: persi-ci/scripts/ci/generate-drats-integration-config.build.yml
    params:
      INTEGRATION_CONFIG_FILE_PATH: config/drats-nfs.json
    input_mapping:
      integration-configs: persi-ci

  - task: drats-with-integration-config
    file: disaster-recovery-acceptance-tests/ci/tasks/drats-with-integration-config/task.yml
    privileged: true
    input_mapping:
      drats-integration-config: updated-integration-configs
    params:
      CONFIG_FILE_PATH: config/drats-nfs.json

- name: pats
  serial_groups:
  - acceptance-tests
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: smith-env

        passed: [deploy-cf]
        trigger: true
      - get: nfs-volume-release
        passed: [deploy-cf]
      - get: mapfs-release
        passed: [deploy-cf]
  - task: generate-pats-config-nfs

    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    params:
      VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
      TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
      CF_USERNAME: admin
      BIND_BOGUS_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
      BIND_CONFIG: '["{\"uid\":\"1000\",\"gid\":\"1000\"}", "{\"uid\":\"1000\",\"gid\":\"1000\",\"mount\": \"/var/vcap/data/foo\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"3\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.0\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.1\"}", "{\"uid\":\"1000\",\"gid\":\"1000\", \"version\": \"4.2\"}"]'  # yamllint disable-line rule:line-length
      CREATE_BOGUS_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/nonexistensevol\"}'
      CREATE_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/users\"}'
      PLAN_NAME: Existing
      SERVICE_NAME: nfs
    output_mapping:
      pats-config: nfs-pats-config
  - task: run-pats-nfs
    input_mapping:
      pats-config: nfs-pats-config
    file: persi-ci/scripts/ci/run-pats.build.yml
    attempts: *number_of_retries
    params:
      PARALLEL_NODES: 5
      TEST_MOUNT_FAIL_LOGGING: true
      TEST_MOUNT_OPTIONS: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: deploy-cf-with-ldap
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smith-env

        passed:
        - claim-ldap-env
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment
      - get: persi-ci
      - get: nfs-volume-release
        passed:
        - claim-ldap-env
      - get: mapfs-release
        passed:
        - claim-ldap-env
  - task: pin-cf-deployment-version
    file: persi-ci/scripts/ci/pin_cf_deployment_version.build.yml
    input_mapping:
      toolsmiths-env: smith-env
  - task: collect-persi-ci-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    params:
      GENERATE_NFS_VARS: true
      GENERATE_SMB_VARS: false
      LDAP_HOST: "nfstestldapserver.service.cf.internal"
      LDAP_SVC_USER: "cn=admin,dc=domain,dc=com"
      LDAP_SVC_PASS: "secret"
      LDAP_PORT: 636
      LDAP_PROTO: tcp
      LDAP_USER_FQDN: "ou=Users,dc=domain,dc=com"
  - task: bosh-deploy-cf
    file: persi-ci/scripts/ci/deploy-cf-with-multiple-releases.build.yml
    input_mapping:
      toolsmiths-env: smith-env
      cf-deployment: cf-deployment
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      VARS_FILES: "nfs-vars.yml"
      OPS_FILES: "operations/use-compiled-releases.yml
                  operations/scale-to-one-az.yml
                  operations/enable-nfs-volume-service.yml
                  updated-nfs-releases.yml
                  operations/enable-nfs-ldap.yml
                  operations/test/enable-nfs-test-server.yml
                  operations/test/enable-nfs-test-ldapserver.yml
                  operations/experimental/fast-deploy-with-downtime-and-danger.yml"
  - task: run-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: smoke_tests
  - task: run-nfs-broker-errand
    attempts: *number_of_retries
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: nfsbrokerpush
      INSTANCE: nfs-broker-push

- name: pats-nfs-ldap
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smith-env

        passed:
        - deploy-cf-with-ldap
        trigger: true
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: nfs-volume-release
        passed:
        - deploy-cf-with-ldap
      - get: mapfs-release
        passed:
        - deploy-cf-with-ldap
  - in_parallel:
      fail_fast: true
      steps:
      - task: generate-legacy-pats-config

        file: persi-ci/scripts/ci/generate_pats_config.build.yml
        params:
          VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
          TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
          BIND_CONFIG: '["{\"username\":\"user1000\",\"password\":\"secret\"}"]'
          CREATE_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/users\"}'
          DISALLOWED_LDAP_BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
          PLAN_NAME: Existing
          SERVICE_NAME: nfs-legacy
        output_mapping:
          pats-config: nfs-legacy-pats-config
      - task: generate-pats-config

        file: persi-ci/scripts/ci/generate_pats_config.build.yml
        params:
          VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
          TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
          BIND_CONFIG: '["{\"username\":\"user1000\",\"password\":\"secret\"}"]'
          CREATE_CONFIG: '{\"share\":\"nfstestserver.service.cf.internal/export/users\"}'
          DISALLOWED_LDAP_BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
          PLAN_NAME: Existing
          SERVICE_NAME: nfs
        output_mapping:
          pats-config: nfs-pats-config
  - in_parallel:
      fail_fast: true
      steps:
      - task: run-legacy-pats
        input_mapping:
          pats-config: nfs-legacy-pats-config
        file: persi-ci/scripts/ci/run-pats.build.yml
        params:
          TEST_DOCKER_PORA: true
      - task: run-pats
        input_mapping:
          pats-config: nfs-pats-config
        file: persi-ci/scripts/ci/run-pats.build.yml
        params:
          TEST_DOCKER_PORA: true

- name: unclaim-env
  plan:
  - get: smith-env

    passed:
    - pats
    - drats
    - cats-nfs
    trigger: true
  - put: smith-env
    params:
      action: unclaim
      env_file: smith-env/metadata

- name: unclaim-ldap-env
  plan:
  - get: smith-env

    passed:
    - pats-nfs-ldap
    trigger: true
  - put: smith-env
    params:
      action: unclaim
      env_file: smith-env/metadata

- name: merge-pr
  plan:
  - get: mapfs-release
    trigger: true
    passed:
    - pats
    - pats-nfs-ldap
    - drats
    - cats-nfs
  - put: mapfs-release
    params:
      merge: true
      repository: mapfs-release

- name: shipit-mapfs
  serial_groups:
  - mapfs-version
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: cryogenics-concourse-tasks
      - get: release
        resource: mapfs-release-master
      - get: version
        resource: mapfs-version
        params:
          bump: final
  - task: create-final-release
    file: cryogenics-concourse-tasks/bosh-tasks/create-release/task.yml
    input_mapping:
      release-repo: release
    output_mapping:
      updated-release-repo: mapfs-final-release
      updated-release-tarball: mapfs-final-release-tarball
    params:
      AWS_ACCESS_KEY_ID: ((aws/mapfs-uploader.id))
      AWS_SECRET_ACCESS_KEY: ((aws/mapfs-uploader.secret))
      GIT_USERNAME: ((github.user))
      GIT_EMAIL: ((github.email))
      FINAL: true
      RELEASE_NAME: mapfs
  - task: create-release-notes
    file: cryogenics-concourse-tasks/release-automation/release-notes/task.yml
    input_mapping:
      git-repo: release
    params:
      USE_LATEST_PUBLISHED_TAG: true
  - task: format-release-notes
    file: cryogenics-concourse-tasks/release-automation/format-release-notes/task.yml
    input_mapping:
      template-folder: cryogenics-concourse-tasks
    params:
      TEMPLATE_PATH: release-automation/release-notes-templates/release-notes-auto.md.erb
  - put: version
    resource: mapfs-version
    params:
      file: version/number
  - put: mapfs-release-master
    params:
      repository: mapfs-final-release
      tag: version/number
      tag_prefix: v
  - put: github-release-mapfs
    params:
      name: version/number
      tag: version/number
      body: release-notes/release-notes.md
      tag_prefix: v
      globs:
      - mapfs-final-release-tarball/mapfs-*.tgz
  - put: mapfs-version
    params:
      bump: patch

- name: manual-bump-mapfs-patch
  serial_groups:
  - mapfs-version
  plan:
  - get: version
    resource: mapfs-version
    params:
      bump: final
  - put: mapfs-version
    params:
      bump: patch

- name: manual-bump-mapfs-minor
  serial_groups:
  - mapfs-version
  plan:
  - get: version
    resource: mapfs-version
    params:
      bump: final
  - put: mapfs-version
    params:
      bump: minor

- name: manual-bump-mapfs-major
  serial_groups:
  - mapfs-version
  plan:
  - get: version
    resource: mapfs-version
    params:
      bump: final
  - put: mapfs-version
    params:
      bump: major
