groups:
- name: bump
  jobs:
  - bump-golang
  - update-go-directive-for-smbdriver-for-gomod-directive-updates
  - update-go-directive-for-smbbroker-for-gomod-directive-updates
- name: test
  jobs:
  - smb-volume-release-job-tests
  - env-gate
  - cats
  - drats
  - pats
  - claim-env
  - deploy-cf
  - unclaim-env
  - merge-pr
- name: release
  jobs:
  - shipit-smb
  - manual-bump-smb-patch
  - manual-bump-smb-minor
  - manual-bump-smb-major

resources:
- name: every-hour
  type: time
  icon: clock-outline
  source:
    interval: 1h

- name: smith-env
  type: pcf-pool
  source:
    api_token: ((toolsmiths.api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment

- name: persi-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/persi-ci
    branch: master

- name: smb-volume-release
  type: pull-request
  source:
    base_branch: master
    access_token: ((github.access_token))
    repository: cloudfoundry/smb-volume-release
    disable_forks: true

- name: smb-volume-release-master
  type: git
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/smb-volume-release.git
    ignore_paths:
      - scripts

- name: smb-volume-version
  type: semver
  source:
    access_key_id: ((aws/smbvolume-uploader.id))
    bucket: smb-volume-release-versions
    initial_version: 3.0.2
    key: current-version
    region_name: us-east-1
    secret_access_key: ((aws/smbvolume-uploader.secret))

- name: github-release-smb
  type: github-release
  source:
    user: cloudfoundry
    repository: smb-volume-release
    drafts: true
    access_token: ((github.access_token))

- name: smb-volume-release-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/smb-volume-release.git

- name: cf-deployment
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-volume-services-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-volume-services-acceptance-tests.git

- name: cf-acceptance-tests
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github.access_token))

- name: disaster-recovery-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests.git

- name: golang-release
  type: git
  icon: tag
  source:
    uri: https://github.com/bosh-packages/golang-release.git
    tag_filter: v*

- icon: github
  name: smb-volume-release-bump-golang
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/smb-volume-release.git
  type: git

- icon: github
  name: smb-volume-release-bump-golang-master
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/smb-volume-release.git
    disable_ci_skip: true
  type: git

- name: cryogenics-concourse-tasks
  type: git
  icon: github
  source:
    uri: git@github.com:pivotal/cryogenics-concourse-tasks.git
    private_key: ((github.ssh_key))
    branch: main

#! This resource must only be used for gomod directive updates: https://github.com/concourse/git-resource/blob/master/README.md?plain=1#L341-L345
- name: smbdriver-for-gomod-directive-updates
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/smbdriver.git
    private_key: ((github.ssh_key))

#! This resource must only be used for gomod directive updates: https://github.com/concourse/git-resource/blob/master/README.md?plain=1#L341-L345
- name: smbbroker-for-gomod-directive-updates
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/smbbroker.git
    private_key: ((github.ssh_key))

resource_types:
- name: pcf-pool
  type: docker-image
  source:
    repository: cftoolsmiths/toolsmiths-envs-resource

- name: git
  type: docker-image
  source:
    repository: concourse/git-resource
    tag: ubuntu

- name: pull-request
  type: docker-image
  source:
    repository: cryogenics/pr-queue-resource

jobs:
- name: bump-golang
  plan:
    - in_parallel:
        - get: cryogenics-concourse-tasks
        - get: golang-release
          trigger: true
        - get: smb-volume-release-bump-golang-master
    - load_var: golang-release-version
      file: golang-release/.git/describe_ref
    - task: bosh-vendor-package
      file: cryogenics-concourse-tasks/deps-automation/bosh-vendor-package/task.yml
      input_mapping:
        release: smb-volume-release-bump-golang-master
        vendored-package-release: golang-release
      params:
        VENDORED_PACKAGE_NAME: golang-1-linux
        VENDOR_UPDATES_BRANCH: &golang-vendor-branch bump-golang-vendor-((.:golang-release-version))
        COMMIT_USERNAME: bump-golang CI job
        COMMIT_USEREMAIL: mapbu-cryogenics@groups.vmware.com
        AWS_ACCESS_KEY_ID: ((aws/smbvolume-uploader.id))
        AWS_SECRET_ACCESS_KEY: ((aws/smbvolume-uploader.secret))
    - put: smb-volume-release-bump-golang
      params:
        repository: release-with-updated-vendored-package
        branch: *golang-vendor-branch
    - try:
        # We've seen cases where there are 2 or more new releases of
        # golang-release which causes this job to trigger 2x or more. A PR will
        # be created on the 1st build. On the following ones, it is possible
        # that this task will fail as there exist already a PR (which is
        # probably flowing through the pipeline). To prevent this scenario
        # we're making this step best-effort.
        # This also makes the job idempotent. If we retrigger the job but if
        # there are no new version of golang-release, this step will fail
        # saying "Your branch is up to date with
        # 'origin/golang-vendor-update'."
        task: create-golang-vendor-pull-request
        file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
        params:
          BASE: master
          BRANCH: *golang-vendor-branch
          LABELS: dependencies
          TITLE: Update vendored package golang-1-linux
          MESSAGE: |
            This is an automatically generated Pull Request from the Cryogenics CI Bot.
            I have detected a new version of [golang-release](https://github.com/bosh-packages/golang-release) and automatically bumped
            this package to benefit from the latest changes.
            If this does not look right, please reach out to the [#mapbu-cryogenics](https://vmware.slack.com/archives/C01DXEYRKRU) team.
        input_mapping:
          source-repo: smb-volume-release-bump-golang

- name: update-go-directive-for-smbbroker-for-gomod-directive-updates
  plan:
  - in_parallel:
    - get: golang-release
      trigger: true
      passed:
      - bump-golang
    - get: cryogenics-concourse-tasks
    - get: smbbroker-for-gomod-directive-updates
      params:
        branch: master
  - task: update-go-directive
    file: cryogenics-concourse-tasks/tasks/bosh/update-go-directive/task.yml
    input_mapping:
      bosh-release-repo-with-vendored-golang: golang-release
      golang-project-repo: smbbroker-for-gomod-directive-updates
    output_mapping:
      golang-project-repo: smbbroker-for-gomod-directive-updates
    params:
      COMMIT_USERNAME: bump-golang CI job
      COMMIT_USEREMAIL: mapbu-cryogenics@groups.vmware.com
      PATH_TO_GO_MODULE: .
  - load_var: golang-release-version
    file: golang-release/.git/describe_ref
  - put: smbbroker-for-gomod-directive-updates
    params:
      repository: smbbroker-for-gomod-directive-updates
      branch: &mapfs-gomod-update-branch bump-golang-vendor-((.:golang-release-version))
      force: true # If the last PR got stuck just overwrite it with new stuff
  - task: create-gomod-directive-updates-pull-request
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      BASE: master
      BRANCH: *mapfs-gomod-update-branch
      LABELS: dependencies
      TITLE: Update gomod directive
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI
        Bot. I have detected a new version of
        [golang-release](https://github.com/bosh-packages/golang-release) and
        automatically updated the go mod directive for this go module. If this
        does not look right, please reach out to the
        [#mapbu-cryogenics](https://vmware.slack.com/archives/C01DXEYRKRU)
        team.
    input_mapping:
      source-repo: smbbroker-for-gomod-directive-updates

- name: update-go-directive-for-smbdriver-for-gomod-directive-updates
  plan:
  - in_parallel:
    - get: golang-release
      trigger: true
      passed:
      - bump-golang
    - get: cryogenics-concourse-tasks
    - get: smbdriver-for-gomod-directive-updates
      params:
        branch: master
  - task: update-go-directive
    file: cryogenics-concourse-tasks/tasks/bosh/update-go-directive/task.yml
    input_mapping:
      bosh-release-repo-with-vendored-golang: golang-release
      golang-project-repo: smbdriver-for-gomod-directive-updates
    output_mapping:
      golang-project-repo: smbdriver-for-gomod-directive-updates
    params:
      COMMIT_USERNAME: bump-golang CI job
      COMMIT_USEREMAIL: mapbu-cryogenics@groups.vmware.com
      PATH_TO_GO_MODULE: .
  - load_var: golang-release-version
    file: golang-release/.git/describe_ref
  - put: smbdriver-for-gomod-directive-updates
    params:
      repository: smbdriver-for-gomod-directive-updates
      branch: &mapfs-gomod-update-branch bump-golang-vendor-((.:golang-release-version))
      force: true # If the last PR got stuck just overwrite it with new stuff
  - task: create-gomod-directive-updates-pull-request
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      BASE: master
      BRANCH: *mapfs-gomod-update-branch
      LABELS: dependencies
      TITLE: Update gomod directive
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI
        Bot. I have detected a new version of
        [golang-release](https://github.com/bosh-packages/golang-release) and
        automatically updated the go mod directive for this go module. If this
        does not look right, please reach out to the
        [#mapbu-cryogenics](https://vmware.slack.com/archives/C01DXEYRKRU)
        team.
    input_mapping:
      source-repo: smbdriver-for-gomod-directive-updates

- name: smb-volume-release-job-tests
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: persi-ci
          - get: smb-volume-release-concourse-tasks
          - get: smb-volume-release
            trigger: true
    - task: rspec
      file: persi-ci/scripts/ci/run-rspec.build.yml
      input_mapping:
        test-repo: smb-volume-release
    - task: bosh-release-test
      file: smb-volume-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
      privileged: true
      attempts: 3

- name: env-gate
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smb-volume-release
        trigger: true
        passed:
        - smb-volume-release-job-tests
      - get: every-hour

- name: claim-env
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: smb-volume-release
        trigger: true
        passed:
          - env-gate
  - put: smith-env
    params:
      action: claim

  - task: output-env-details
    file: persi-ci/scripts/ci/claim-pooled-env.build.yml
    input_mapping:
      pooled-env: smith-env

- name: deploy-cf
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smith-env
        passed: [ claim-env ]
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment
      - get: persi-ci
      - get: smb-volume-release
        passed: [ claim-env ]
  - task: pin-cf-deployment-version
    file: persi-ci/scripts/ci/pin_cf_deployment_version.build.yml
    input_mapping:
      toolsmiths-env: smith-env
  - task: collect-persi-ci-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment-pinned
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    params:
      GENERATE_NFS_VARS: false
      GENERATE_SMB_VARS: true
      SMB_USERNAME: ((smb_pats.username))
      SMB_PASSWORD: ((smb_pats.password))
  - task: bosh-deploy-cf
    file: persi-ci/scripts/ci/deploy-cf-with-multiple-releases.build.yml
    input_mapping:
      cf-deployment: cf-deployment-pinned
      toolsmiths-env: smith-env
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      VARS_FILES: "smb-vars.yml"
      OPS_FILES: "operations/use-compiled-releases.yml
                  operations/scale-to-one-az.yml
                  operations/test/enable-smb-test-server.yml
                  operations/backup-and-restore/enable-backup-restore.yml
                  operations/enable-smb-volume-service.yml
                  updated-smb-releases.yml
                  operations/experimental/fast-deploy-with-downtime-and-danger.yml"
  - task: run-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: smoke_tests
  - task: run-smb-broker-errand
    attempts: 3
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: smbbrokerpush
      INSTANCE: smb-broker-push

- name: cats
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: smb-volume-release
            passed:
              - pats
            trigger: true
          - get: smith-env
            passed:
              - pats
            trigger: true
          - get: persi-ci
          - get: cf-acceptance-tests
          - get: cf-deployment-concourse-tasks
    - task: generate-cats-config
      file: persi-ci/scripts/ci/generate_cats_config.build.yml
      params:
        VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
        CF_USERNAME: admin
        SERVICE_NAME: smb
        PLAN_NAME: Existing
        CREATE_CONFIG: '{\"share\": \"((smb_cats.remote_path))\", \"username\": \"((smb_cats.username))\", \"password\": \"((smb_cats.password))\"}'
        TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
    - task: run-cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: cats-config
      params:
        CONFIG_FILE_PATH: cats.json

- name: drats
  serial: true
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: smb-volume-release
            passed: [ cats ]
            trigger: true
          - get: bbr-binary-release
          - get: disaster-recovery-acceptance-tests
          - get: persi-ci
          - get: smith-env
            passed: [ cats ]
            trigger: true
    - task: generate-integration-config
      file: persi-ci/scripts/ci/generate-drats-integration-config.build.yml
      params:
        INTEGRATION_CONFIG_FILE_PATH: config/drats-smb.json
      input_mapping:
        integration-configs: persi-ci

    - task: drats-with-integration-config
      file: disaster-recovery-acceptance-tests/ci/tasks/drats-with-integration-config/task.yml
      privileged: true
      input_mapping:
        drats-integration-config: updated-integration-configs
      params:
        CONFIG_FILE_PATH: config/drats-smb.json

- name: pats
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: smith-env
        passed: [ deploy-cf ]
        trigger: true
      - get: smb-volume-release
        passed: [ deploy-cf ]
      - get: smb-volume-release-concourse-tasks
        params:
          submodules: none
  - task: generate-pats-config-smb

    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    params:
      VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
      TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
      CF_USERNAME: admin
      DISALLOWED_OVERRIDE_BIND_CONFIG: '{\"share\":\"//smbtestserver.service.cf.internal/export/vol2\"}'
      CREATE_BOGUS_CONFIG: '{\"share\":\"//smb.bogus/export/nonexistensevol\"}'
      PLAN_NAME: Existing
      SERVICE_NAME: smb
      CREATE_CONFIG: '{\"share\":\"((smb_cats.remote_path))\"}'
      BIND_CONFIG: '["{\"username\":\"((smb_cats.username))\",\"password\":\"((smb_cats.password))\", \"domain\": \"foo\"}", "{\"username\":\"((smb_cats.username))\",\"password\":\"((smb_cats.password))\", \"domain\": \"foo\", \"version\": \"3.0\"}", "{\"username\":\"((smb_cats.username))\",\"password\":\"((smb_cats.password))\", \"mount\": \"/var/vcap/data/foo\", \"domain\": \"foo\"}"]'
    output_mapping:
      pats-config: smb-pats-config
  - task: run-pats-smb
    input_mapping:
      pats-config: smb-pats-config
    file: persi-ci/scripts/ci/run-pats.build.yml
    attempts: 3
    params:
      PARALLEL_NODES: 5
      TEST_MOUNT_OPTIONS: false
      TEST_MOUNT_FAIL_LOGGING: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: unclaim-env
  plan:
  - get: smith-env
    passed:
    - drats
    trigger: true
  - put: smith-env
    params:
      action: unclaim
      env_file: smith-env/metadata

- name: merge-pr
  plan:
  - get: smb-volume-release
    trigger: true
    passed:
    - drats
  - put: smb-volume-release
    params:
      merge: true
      repository: smb-volume-release

- name: shipit-smb
  serial_groups:
    - smb-version
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: persi-ci
          - get: cryogenics-concourse-tasks
          - get: release
            resource: smb-volume-release-master
          - get: version
            resource: smb-volume-version
            params:
              bump: final
    - task: create-final-release
      file: cryogenics-concourse-tasks/bosh-tasks/create-release/task.yml
      input_mapping:
        release-repo: release
      output_mapping:
        updated-release-repo: smb-final-release
        updated-release-tarball: smb-final-release-tarball
      params:
        AWS_ACCESS_KEY_ID: ((aws/smbvolume-uploader.id))
        AWS_SECRET_ACCESS_KEY: ((aws/smbvolume-uploader.secret))
        GIT_USERNAME: ((github.user))
        GIT_EMAIL: ((github.email))
        FINAL: true
        RELEASE_NAME: smb-volume
    - task: create-release-notes
      file: cryogenics-concourse-tasks/release-automation/release-notes/task.yml
      input_mapping:
        git-repo: release
      params:
        USE_LATEST_PUBLISHED_TAG: true
    - task: format-release-notes
      file: cryogenics-concourse-tasks/release-automation/format-release-notes/task.yml
      input_mapping:
        template-folder: cryogenics-concourse-tasks
      params:
        TEMPLATE_PATH: release-automation/release-notes-templates/release-notes-auto.md.erb
    - put: smb-volume-version
      resource: smb-volume-version
      params:
        file: version/number
    - put: smb-volume-release-master
      params:
        repository: smb-final-release
        tag: version/number
        tag_prefix: v
    - put: github-release-smb
      params:
        name: version/number
        tag: version/number
        body: release-notes/release-notes.md
        tag_prefix: v
        globs:
          - smb-final-release-tarball/smb-volume-*.tgz
    - put: smb-volume-version
      params:
        bump: patch

- name: manual-bump-smb-patch
  serial_groups:
    - smb-version
  plan:
    - get: smb-volume-version
      resource: smb-volume-version
      params:
        bump: final
    - put: smb-volume-version
      params:
        bump: patch

- name: manual-bump-smb-minor
  serial_groups:
    - smb-version
  plan:
    - get: smb-volume-version
      resource: smb-volume-version
      params:
        bump: final
    - put: smb-volume-version
      params:
        bump: minor

- name: manual-bump-smb-major
  serial_groups:
    - smb-version
  plan:
    - get: smb-volume-version
      resource: smb-volume-version
      params:
        bump: final
    - put: smb-volume-version
      params:
        bump: major
