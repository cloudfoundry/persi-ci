---
#
# To set the pipeline, run:
#    fly -t cryo-runway set-pipeline -p lts-nfsbroker-v5.0 -c lts-nfsbroker-v5.0.yml
#
# ************************************
# Secrets we need to run this pipeline
# ************************************

#! this needs to come first, else all other vars can't be resolved.
#! cerberus creds are required to access the teams vault instance managed by cerberus. The creds have been created manually via the vault-cli targetting the teams cerberus vault. Example steps to create an approle are here: https://developer.hashicorp.com/vault/docs/auth/approle the required value for policies is `restricted-admin` the auth method is mounted on the standard path.
cerberus: &cerberus
  role_id: ((cerberus-auth.role_id))
  secret_id: ((cerberus-auth.secret_id))
cerberus_url: &cerberus_url ((cerberus-auth.url))

secrets:
#! gcr_viewer_key was needed on 2024-03-24 for getting concourse container images from our GCR instance. Generated by using personal creds to log into the mapbu-cryogenics google cloud project.
- &gcr_viewer_key  ((cerberus:gcr.viewer_key))
#! git access data was needed on 2024-03-24 used to get pull requests and get git repos as well as committing bumped blobs to git. They refer to the team github-ci account from lastpass.
- &github_ssh_key ((cerberus:github.ssh_key))
- &github_access_token ((cerberus:github.access_token))
- &github_email ((cerberus:github.email))
- &github_user ((cerberus:github.user))

# **************
# End of secrets
# **************
var_sources:
- name: cerberus
  type: vault
  config:
    auth_backend: approle
    auth_params: *cerberus
    url: *cerberus_url
    path_prefix: secret

groups:
- name: test
  jobs:
  - security-scan
  - unit-and-integration-test
  - merge-pr
- name: bump
  jobs:
  - bump-go-module

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/cryogenics/pr-queue-resource

resources:
- name: persi-ci
  type: git
  icon: github
  source:
    uri: https://github.com/cloudfoundry/persi-ci.git
    branch: master

- name: nfsbroker
  type: pull-request
  icon: source-pull
  source:
    repository: cloudfoundry/nfsbroker
    base_branch: &base_branch v5.0
    disable_forks: true
    access_token: *github_access_token

- name: run-once-a-week
  type: time
  icon: timer-outline
  source:
    days: [ Wednesday ]

- name: nfsbroker-repo
  type: git
  icon: github
  source:
    private_key: *github_ssh_key
    uri: &source-repo git@github.com:cloudfoundry/nfsbroker.git
    branch: *base_branch

- name: nfsbroker-repo-write
  type: git
  icon: github
  source:
    private_key: *github_ssh_key
    uri: *source-repo
    commit_filter:
      exclude:
      - ;resource comment; This resource is used exclusively for pushing new changes

- name: credhub
  type: git
  icon: github
  source:
    branch: main
    uri: https://github.com/cloudfoundry-incubator/credhub

- name: image-cryogenics-essentials
  type: registry-image
  source:
    repository: us-west2-docker.pkg.dev/mapbu-cryogenics/essentials/cryo-essentials
    username: _json_key
    password: *gcr_viewer_key

- name: cryogenics-concourse-tasks
  type: git
  icon: github
  source:
    private_key: *github_ssh_key
    uri: git@github.com:pivotal/cryogenics-concourse-tasks.git
    branch: main

jobs:
- name: security-scan
  plan:
  - in_parallel:
    - get: persi-ci
    - get: image-cryogenics-essentials
    - get: nfsbroker
      trigger: true
  - task: build
    image: image-cryogenics-essentials
    file: persi-ci/scripts/ci/security-scan.build.yml
    params:
      PATHS: "./"
    input_mapping:
      release-dir: nfsbroker

- name: unit-and-integration-test
  public: true
  plan:
  - in_parallel:
    - get: nfsbroker
      trigger: true
    - get: credhub
    - get: image-cryogenics-essentials
  - task: build
    image: image-cryogenics-essentials
    file: nfsbroker/scripts/ci/run_unit_and_integration.build.yml

- name: merge-pr
  plan:
  - get: nfsbroker
    trigger: true
    passed:
    - security-scan
    - unit-and-integration-test
  - put: nfsbroker
    params:
      merge: true
      repository: nfsbroker

- name: bump-go-module
  serial: true
  plan:
  - in_parallel:
    - get: run-once-a-week
      trigger: true
    - get: source-repo
      resource: nfsbroker-repo
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
  - task: bump-go-module
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/deps-automation/bump-go-module/task.yml
    params:
      GIT_USERNAME: *github_user
      GIT_EMAIL: *github_email
      BRANCH_PREFIX: "v5.0-"
  - try:
      load_var: go-module-update-branch
      file: destination-repo/.update-branch-name
      reveal: true
      on_success:
        do:
        - put: nfsbroker-repo-write
          params:
            repository: destination-repo
            branch: &go-module-branch ((.:go-module-update-branch))
        - task: create-pull-request
          image: image-cryogenics-essentials
          file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
          params:
            BASE: *base_branch
            BRANCH: *go-module-branch
            LABELS: dependencies
            TITLE: Bump go module ((.:go-module-update-branch)) in v5.0
            MESSAGE: |
              This is an automatically generated Pull Request from the Cryogenics CI Bot.

              I have detected a new version of a go module and automatically bumped
              it to benefit from the latest changes.

              If this does not look right, please reach out to the [#mapbu-cryogenics](https://vmware.slack.com/archives/C01DXEYRKRU) team.
          input_mapping:
            source-repo: nfsbroker-repo-write
