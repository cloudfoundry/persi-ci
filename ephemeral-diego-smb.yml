shared_functions:
- on_failure: &on_failure_unclaim
    do:
    - task: wait-1-hour
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: alpine}
        run:
          path: sleep
          args: [ "3600" ]
    - put: smith-env
      params:
        action: unclaim
        env_file: smith-env/metadata

- on_error: &on_error_unclaim
    do:
      - task: wait-1-hour
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: alpine}
          run:
            path: sleep
            args: [ "3600" ]
      - put: smith-env
        params:
          action: unclaim
          env_file: smith-env/metadata


resources:
- name: every-hour
  type: time
  icon: clock-outline
  source:
    interval: 1h

- name: smith-env
  type: pcf-pool
  source:
    api_token: ((toolsmiths.api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment


- name: persi-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/persi-ci
    branch: master

- name: smb-volume-release
  type: pull-request
  source:
    base_branch: master
    access_token: ((github.access_token))
    repository: cloudfoundry/smb-volume-release
    disable_forks: true

- name: smb-volume-release-master
  type: git
  source:
    branch: master
    private_key: ((github.ssh_key))
    uri: git@github.com:cloudfoundry/smb-volume-release.git
    ignore_paths:
      - scripts

- name: smb-volume-version
  type: semver
  source:
    access_key_id: ((aws/smbvolume-uploader.id))
    bucket: smb-volume-release-versions
    initial_version: 3.0.2
    key: current-version
    region_name: us-east-1
    secret_access_key: ((aws/smbvolume-uploader.secret))

- name: github-release-smb
  type: github-release
  source:
    user: cloudfoundry
    repository: smb-volume-release
    drafts: true
    access_token: ((github.access_token))

- name: smb-volume-release-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/smb-volume-release.git

- name: cf-deployment
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-volume-services-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-volume-services-acceptance-tests.git

- name: cf-acceptance-tests
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github.access_token))

- name: disaster-recovery-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests.git

resource_types:
- name: pcf-pool

  type: docker-image
  source:
    repository: cftoolsmiths/toolsmiths-envs-resource

- name: git
  type: docker-image
  source:
    repository: concourse/git-resource
    tag: ubuntu

- name: pull-request
  type: docker-image
  source:
    repository: cryogenics/pr-queue-resource

jobs:
- name: smb-volume-release-job-tests
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: persi-ci
          - get: smb-volume-release-concourse-tasks
          - get: smb-volume-release
            trigger: true
    - task: rspec
      file: persi-ci/scripts/ci/run-rspec.build.yml
      input_mapping:
        test-repo: smb-volume-release
    - task: bosh-release-test
      file: smb-volume-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
      privileged: true
      attempts: 3

- name: env-gate
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smb-volume-release
        trigger: true
        passed:
        - smb-volume-release-job-tests
      - get: every-hour


### duplication starts here
- name: claim-env-bionic
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: smb-volume-release
        trigger: true
        passed:
          - env-gate
  - put: smith-env
    params:
      action: claim

  - task: output-env-details
    file: persi-ci/scripts/ci/claim-pooled-env.build.yml
    input_mapping:
      pooled-env: smith-env

- name: deploy-cf-bionic
  public: true
  build_logs_to_retain: 100
  on_failure: *on_failure_unclaim
  on_error: *on_error_unclaim
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smith-env

        passed: [ claim-env-bionic ]
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment
      - get: persi-ci
      - get: smb-volume-release
        passed: [ claim-env-bionic ]
  - task: pin-cf-deployment-version
    file: persi-ci/scripts/ci/pin_cf_deployment_version.build.yml
    input_mapping:
      toolsmiths-env: smith-env
  - task: collect-persi-ci-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment-pinned
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    params:
      GENERATE_NFS_VARS: false
      GENERATE_SMB_VARS: true
      SMB_USERNAME: ((smb_pats.username))
      SMB_PASSWORD: ((smb_pats.password))
  - task: create-opsfile-to-remove-release-urls
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: alpine}
      inputs:
        - name: collected-ops-files
      outputs:
        - name: collected-ops-files
      run:
        path: "/bin/sh"
        args:
          - -c
          - |
              cat <<EOF > collected-ops-files/remove-all-release-urls.yml
              ---
              - type: remove
                path: /releases/name=backup-and-restore-sdk?/url?
              - type: remove
                path: /releases/name=binary-offline-buildpack?/url?
              - type: remove
                path: /releases/name=bosh-dns-aliases?/url?
              - type: remove
                path: /releases/name=bosh-system-metrics-forwarder?/url?
              - type: remove
                path: /releases/name=bpm?/url?
              - type: remove
                path: /releases/name=capi?/url?
              - type: remove
                path: /releases/name=cf-autoscaling?/url?
              - type: remove
                path: /releases/name=cf-backup-and-restore?/url?
              - type: remove
                path: /releases/name=cf-cli?/url?
              - type: remove
                path: /releases/name=cf-networking?/url?
              - type: remove
                path: /releases/name=cf-smoke-tests?/url?
              - type: remove
                path: /releases/name=cf-syslog-drain?/url?
              - type: remove
                path: /releases/name=cflinuxfs3?/url?
              - type: remove
                path: /releases/name=consul?/url?
              - type: remove
                path: /releases/name=consul-drain?/url?
              - type: remove
                path: /releases/name=credhub?/url?
              - type: remove
                path: /releases/name=diego?/url?
              - type: remove
                path: /releases/name=dotnet-core-offline-buildpack?/url?
              - type: remove
                path: /releases/name=garden-runc?/url?
              - type: remove
                path: /releases/name=go-offline-buildpack?/url?
              - type: remove
                path: /releases/name=haproxy?/url?
              - type: remove
                path: /releases/name=java-offline-buildpack?/url?
              - type: remove
                path: /releases/name=leadership-election?/url?
              - type: remove
                path: /releases/name=log-cache?/url?
              - type: remove
                path: /releases/name=loggregator?/url?
              - type: remove
                path: /releases/name=loggregator-agent?/url?
              - type: remove
                path: /releases/name=mapfs?/url?
              - type: remove
                path: /releases/name=metric-registrar?/url?
              - type: remove
                path: /releases/name=mysql-monitoring?/url?
              - type: remove
                path: /releases/name=nats?/url?
              - type: remove
                path: /releases/name=nfs-volume?/url?
              - type: remove
                path: /releases/name=nginx-offline-buildpack?/url?
              - type: remove
                path: /releases/name=nodejs-offline-buildpack?/url?
              - type: remove
                path: /releases/name=notifications?/url?
              - type: remove
                path: /releases/name=notifications-ui?/url?
              - type: remove
                path: /releases/name=php-offline-buildpack?/url?
              - type: remove
                path: /releases/name=push-apps-manager-release?/url?
              - type: remove
                path: /releases/name=push-usage-service-release?/url?
              - type: remove
                path: /releases/name=r-offline-buildpack?/url?
              - type: remove
                path: /releases/name=python-offline-buildpack?/url?
              - type: remove
                path: /releases/name=pxc?/url?
              - type: remove
                path: /releases/name=routing?/url?
              - type: remove
                path: /releases/name=ruby-offline-buildpack?/url?
              - type: remove
                path: /releases/name=silk?/url?
              - type: remove
                path: /releases/name=smb-volume?/url?
              - type: remove
                path: /releases/name=smoke-tests?/url?
              - type: remove
                path: /releases/name=staticfile-offline-buildpack?/url?
              - type: remove
                path: /releases/name=statsd-injector?/url?
              - type: remove
                path: /releases/name=syslog?/url?
              - type: remove
                path: /releases/name=uaa?/url?
              - type: remove
                path: /releases/name=istio?/url?
              - type: remove
                path: /releases/name=metrics-discovery?/url?
              - type: remove
                path: /releases/name=system-metrics-scraper?/url?
              EOF
  - task: bosh-deploy-cf
    file: persi-ci/scripts/ci/deploy-cf-with-multiple-releases.build.yml
    input_mapping:
      cf-deployment: cf-deployment-pinned
      toolsmiths-env: smith-env
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      VARS_FILES: "smb-vars.yml"
      OPS_FILES: "operations/scale-to-one-az.yml
                  operations/test/enable-smb-test-server.yml
                  operations/backup-and-restore/enable-backup-restore.yml
                  operations/enable-smb-volume-service.yml
                  updated-smb-releases.yml
                  remove-all-release-urls.yml
                  operations/experimental/use-bionic-stemcell.yml
                  operations/experimental/fast-deploy-with-downtime-and-danger.yml"
  - task: run-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: smoke_tests
  - task: run-smb-broker-errand
    attempts: 3
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: smbbrokerpush
      INSTANCE: smb-broker-push

- name: cats-bionic
  serial_groups:
    - acceptance-tests
  on_failure: *on_failure_unclaim
  on_error: *on_error_unclaim
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: smb-volume-release
            passed: [ deploy-cf-bionic ]
            trigger: true
          - get: smith-env

            passed: [ deploy-cf-bionic ]
            trigger: true
          - get: persi-ci
          - get: cf-acceptance-tests
          - get: cf-deployment-concourse-tasks
    - task: generate-cats-config
      file: persi-ci/scripts/ci/generate_cats_config.build.yml

      params:
        VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
        CF_USERNAME: admin
        SERVICE_NAME: smb
        PLAN_NAME: Existing
        CREATE_CONFIG: '{\"share\": \"((smb_cats.remote_path))\", \"username\": \"((smb_cats.username))\", \"password\": \"((smb_cats.password))\"}'
        TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
    - task: run-cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: cats-config
      params:
        CONFIG_FILE_PATH: cats.json

- name: drats-bionic
  serial: true
  serial_groups:
    - acceptance-tests
#  on_failure: *on_failure_unclaim
#  on_error: *on_error_unclaim
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: smb-volume-release
            passed: [ deploy-cf-bionic ]
            trigger: true
          - get: bbr-binary-release
          - get: disaster-recovery-acceptance-tests
          - get: persi-ci
          - get: smith-env

            passed: [ deploy-cf-bionic ]
            trigger: true
    - task: generate-integration-config
      file: persi-ci/scripts/ci/generate-drats-integration-config.build.yml
      params:
        INTEGRATION_CONFIG_FILE_PATH: config/drats-smb.json
      input_mapping:
        integration-configs: persi-ci

    - task: drats-with-integration-config
      file: disaster-recovery-acceptance-tests/ci/tasks/drats-with-integration-config/task.yml
      privileged: true
      input_mapping:
        drats-integration-config: updated-integration-configs
      params:
        CONFIG_FILE_PATH: config/drats-smb.json

- name: pats-bionic
  serial_groups:
    - acceptance-tests
  on_failure: *on_failure_unclaim
  on_error: *on_error_unclaim
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: smith-env

        passed: [ deploy-cf-bionic ]
        trigger: true
      - get: smb-volume-release
        passed: [ deploy-cf-bionic ]
      - get: smb-volume-release-concourse-tasks
        params:
          submodules: none
  - task: generate-pats-config-smb

    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    params:
      VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
      TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
      CF_USERNAME: admin
      DISALLOWED_OVERRIDE_BIND_CONFIG: '{\"share\":\"//smbtestserver.service.cf.internal/export/vol2\"}'
      CREATE_BOGUS_CONFIG: '{\"share\":\"//smb.bogus/export/nonexistensevol\"}'
      PLAN_NAME: Existing
      SERVICE_NAME: smb
      CREATE_CONFIG: '{\"share\":\"((smb_cats-bionic.remote_path))\"}'
      BIND_CONFIG: '["{\"username\":\"((smb_cats.username))\",\"password\":\"((smb_cats.password))\", \"domain\": \"foo\"}", "{\"username\":\"((smb_cats.username))\",\"password\":\"((smb_cats.password))\", \"domain\": \"foo\", \"version\": \"3.0\"}", "{\"username\":\"((smb_cats.username))\",\"password\":\"((smb_cats.password))\", \"mount\": \"/var/vcap/data/foo\", \"domain\": \"foo\"}"]'
    output_mapping:
      pats-config: smb-pats-config
  - task: run-pats-smb
    input_mapping:
      pats-config: smb-pats-config
    file: persi-ci/scripts/ci/run-pats.build.yml
    attempts: 3
    params:
      PARALLEL_NODES: 5
      TEST_MOUNT_OPTIONS: false
      TEST_MOUNT_FAIL_LOGGING: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: unclaim-env-bionic
  plan:
  - get: smith-env

    passed:
    - pats-bionic
    - drats-bionic
    - cats
    trigger: true
  - put: smith-env
    params:
      action: unclaim
      env_file: smith-env/metadata

### duplication ends here

- name: claim-env
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: persi-ci
      - get: smb-volume-release
        trigger: true
        passed:
          - env-gate
  - put: smith-env
    params:
      action: claim

  - task: output-env-details
    file: persi-ci/scripts/ci/claim-pooled-env.build.yml
    input_mapping:
      pooled-env: smith-env

- name: deploy-cf
  public: true
  build_logs_to_retain: 100
  on_failure: *on_failure_unclaim
  on_error: *on_error_unclaim
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: smith-env

        passed: [ claim-env ]
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-deployment
      - get: persi-ci
      - get: smb-volume-release
        passed: [ claim-env ]
  - task: pin-cf-deployment-version
    file: persi-ci/scripts/ci/pin_cf_deployment_version.build.yml
    input_mapping:
      toolsmiths-env: smith-env
  - task: collect-persi-ci-ops-files
    file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
    input_mapping:
      base-ops-files: cf-deployment-pinned
      new-ops-files: persi-ci
    params:
      BASE_OPS_FILE_DIR: "operations"
  - task: generate-variables
    file: persi-ci/scripts/ci/generate_variables.build.yml
    params:
      GENERATE_NFS_VARS: false
      GENERATE_SMB_VARS: true
      SMB_USERNAME: ((smb_pats.username))
      SMB_PASSWORD: ((smb_pats.password))
  - task: bosh-deploy-cf
    file: persi-ci/scripts/ci/deploy-cf-with-multiple-releases.build.yml
    input_mapping:
      cf-deployment: cf-deployment-pinned
      toolsmiths-env: smith-env
      ops-files: collected-ops-files
      vars-files: generated-vars
    params:
      VARS_FILES: "smb-vars.yml"
      OPS_FILES: "operations/use-compiled-releases.yml
                  operations/scale-to-one-az.yml
                  operations/test/enable-smb-test-server.yml
                  operations/backup-and-restore/enable-backup-restore.yml
                  operations/enable-smb-volume-service.yml
                  updated-smb-releases.yml
                  operations/experimental/fast-deploy-with-downtime-and-danger.yml"
  - task: run-smoke-tests
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: smoke_tests
  - task: run-smb-broker-errand
    attempts: 3
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: smith-env
    params:
      ERRAND_NAME: smbbrokerpush
      INSTANCE: smb-broker-push

- name: cats
  serial_groups:
    - acceptance-tests
  on_failure: *on_failure_unclaim
  on_error: *on_error_unclaim
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: smb-volume-release
            passed: [ deploy-cf ]
            trigger: true
          - get: smith-env

            passed: [ deploy-cf ]
            trigger: true
          - get: persi-ci
          - get: cf-acceptance-tests
          - get: cf-deployment-concourse-tasks
    - task: generate-cats-config
      file: persi-ci/scripts/ci/generate_cats_config.build.yml

      params:
        VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
        CF_USERNAME: admin
        SERVICE_NAME: smb
        PLAN_NAME: Existing
        CREATE_CONFIG: '{\"share\": \"((smb_cats.remote_path))\", \"username\": \"((smb_cats.username))\", \"password\": \"((smb_cats.password))\"}'
        TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
    - task: run-cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: cats-config
      params:
        CONFIG_FILE_PATH: cats.json

- name: drats
  serial: true
  serial_groups:
    - acceptance-tests
#  on_failure: *on_failure_unclaim
#  on_error: *on_error_unclaim
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: smb-volume-release
            passed: [ deploy-cf ]
            trigger: true
          - get: bbr-binary-release
          - get: disaster-recovery-acceptance-tests
          - get: persi-ci
          - get: smith-env

            passed: [ deploy-cf ]
            trigger: true
    - task: generate-integration-config
      file: persi-ci/scripts/ci/generate-drats-integration-config.build.yml
      params:
        INTEGRATION_CONFIG_FILE_PATH: config/drats-smb.json
      input_mapping:
        integration-configs: persi-ci

    - task: drats-with-integration-config
      file: disaster-recovery-acceptance-tests/ci/tasks/drats-with-integration-config/task.yml
      privileged: true
      input_mapping:
        drats-integration-config: updated-integration-configs
      params:
        CONFIG_FILE_PATH: config/drats-smb.json

- name: pats
  serial_groups:
    - acceptance-tests
  on_failure: *on_failure_unclaim
  on_error: *on_error_unclaim
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: cf-volume-services-acceptance-tests
      - get: persi-ci
      - get: smith-env

        passed: [ deploy-cf ]
        trigger: true
      - get: smb-volume-release
        passed: [ deploy-cf ]
      - get: smb-volume-release-concourse-tasks
        params:
          submodules: none
  - task: generate-pats-config-smb

    file: persi-ci/scripts/ci/generate_pats_config.build.yml
    params:
      VAR_RESOLVER_SCRIPT: persi-ci/scripts/ci/cf_deployment_helpers.sh
      TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
      CF_USERNAME: admin
      DISALLOWED_OVERRIDE_BIND_CONFIG: '{\"share\":\"//smbtestserver.service.cf.internal/export/vol2\"}'
      CREATE_BOGUS_CONFIG: '{\"share\":\"//smb.bogus/export/nonexistensevol\"}'
      PLAN_NAME: Existing
      SERVICE_NAME: smb
      CREATE_CONFIG: '{\"share\":\"((smb_cats.remote_path))\"}'
      BIND_CONFIG: '["{\"username\":\"((smb_cats.username))\",\"password\":\"((smb_cats.password))\", \"domain\": \"foo\"}", "{\"username\":\"((smb_cats.username))\",\"password\":\"((smb_cats.password))\", \"domain\": \"foo\", \"version\": \"3.0\"}", "{\"username\":\"((smb_cats.username))\",\"password\":\"((smb_cats.password))\", \"mount\": \"/var/vcap/data/foo\", \"domain\": \"foo\"}"]'
    output_mapping:
      pats-config: smb-pats-config
  - task: run-pats-smb
    input_mapping:
      pats-config: smb-pats-config
    file: persi-ci/scripts/ci/run-pats.build.yml
    attempts: 3
    params:
      PARALLEL_NODES: 5
      TEST_MOUNT_OPTIONS: false
      TEST_MOUNT_FAIL_LOGGING: true
      TEST_MULTI_CELL: true
      TEST_READ_ONLY: true

- name: unclaim-env
  plan:
  - get: smith-env

    passed:
    - pats
    - drats
    - cats
    trigger: true
  - put: smith-env
    params:
      action: unclaim
      env_file: smith-env/metadata

- name: merge-pr
  plan:
  - get: smb-volume-release
    trigger: true
    passed:
    - pats-bionic
    - drats-bionic
    - cats-bionic
    - pats
    - drats
    - cats
  - put: smb-volume-release
    params:
      merge: true
      repository: smb-volume-release

- name: shipit-smb
  serial_groups:
    - smb-version
  plan:
    - in_parallel:
        fail_fast: true
        steps:
          - get: persi-ci
          - get: release
            resource: smb-volume-release-master
          - get: version
            resource: smb-volume-version
            params:
              bump: final
    - task: finalize-release
      file: persi-ci/scripts/ci/finalize_release.build.yml
      params:
        BASE_RELEASE_NAME: smb-volume
        GIT_USER: ((github.user))
        GIT_EMAIL: ((github.email))
        S3_ACCESS_KEY_ID: ((aws/smbvolume-uploader.id))
        S3_ACCESS_KEY: ((aws/smbvolume-uploader.secret))
    - put: smb-volume-version
      resource: smb-volume-version
      params:
        file: version/number
    - task: generate-github-release
      file: persi-ci/scripts/ci/generate_github_release.build.yml
      params:
        BASE_RELEASE_NAME: smb-volume
    - put: smb-volume-release-master
      params:
        repository: finalized-release/release
        tag: version/number
        tag_prefix: v
    - put: github-release-smb
      params:
        commitish: generated-release/commitish
        name: generated-release/name
        tag: generated-release/version
        globs: []
    - put: smb-volume-version
      params:
        bump: patch

- name: manual-bump-smb-patch
  serial_groups:
    - smb-version
  plan:
    - get: smb-volume-version
      resource: smb-volume-version
      params:
        bump: final
    - put: smb-volume-version
      params:
        bump: patch

- name: manual-bump-smb-minor
  serial_groups:
    - smb-version
  plan:
    - get: smb-volume-version
      resource: smb-volume-version
      params:
        bump: final
    - put: smb-volume-version
      params:
        bump: minor

- name: manual-bump-smb-major
  serial_groups:
    - smb-version
  plan:
    - get: smb-volume-version
      resource: smb-volume-version
      params:
        bump: final
    - put: smb-volume-version
      params:
        bump: major
