shared_functions:
  - on_failure: &on_failure_unclaim
      do:
        - task: wait-1-hour
          config:
            platform: linux
            image_resource:
              type: docker-image
              source: {repository: alpine}
            run:
              path: sleep
              args: [ "1" ]
        - put: smith-env
          params:
            action: unclaim
            env_file: smith-env/metadata

  - on_error: &on_error_unclaim
      do:
        - task: wait-1-hour
          config:
            platform: linux
            image_resource:
              type: docker-image
              source: {repository: alpine}
            run:
              path: sleep
              args: [ "1" ]
        - put: smith-env
          params:
            action: unclaim
            env_file: smith-env/metadata


resources:
  - name: nfs-volume-release-concourse-tasks
    type: git
    source:
      branch: {{lts-nfs-branch}}
      private_key: ((github.ssh_key))
      uri: https://github.com/cloudfoundry/nfs-volume-release.git
  - name: smith-env
    type: pcf-pool
    source:
      api_token: ((toolsmiths.api_token))
      hostname: environments.toolsmiths.cf-app.com
      pool_name: {{pas-version}}

  - name: docker_driver_integration_tests
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/docker_driver_integration_tests
  - name: credhub
    type: git
    source:
      branch: main
      uri: https://github.com/cloudfoundry-incubator/credhub
  - name: persi-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/persi-ci
      branch: freezing

  - name: nfs-volume-release
    type: pull-request
    source:
      base_branch: {{lts-nfs-branch}}
      access_token: ((github.access_token))
      repository: cloudfoundry/nfs-volume-release
      disable_forks: true

  - name: nfs-volume-release-lts
    type: git
    source:
      branch: {{lts-nfs-branch}}
      private_key: ((github.ssh_key))
      uri: https://github.com/cloudfoundry/nfs-volume-release.git
      ignore_paths:
        - scripts

  - name: mapfs-release
    type: git
    source:
      branch: master
      private_key: ((github.ssh_key))
      uri: https://github.com/cloudfoundry/mapfs-release.git

  - name: nfsvolume-version
    type: semver
    source:
      access_key_id: ((aws/lts-nfsvolume-uploader.id))
      bucket: lts-nfsvolume-release-versions
      initial_version: {{nfs-semver-initial-version}}
      key: {{lts-nfs-branch}}
      region_name: us-west-2
      secret_access_key: ((aws/lts-nfsvolume-uploader.secret))

  - name: cf-deployment
    type: git
    source:
      branch: main
      uri: https://github.com/cloudfoundry/cf-deployment.git

  - name: cf-deployment-concourse-tasks
    type: git
    source:
      branch: main
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

  - name: cf-volume-services-acceptance-tests
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-volume-services-acceptance-tests.git

  - name: github-release-nfs
    type: github-release
    source:
      user: cloudfoundry
      repository: nfs-volume-release
      drafts: true
      access_token: ((github.access_token))

  - name: releng-kiln-concourse-tasks
    type: git
    source:
      uri: git@github.com:pivotal/releng-kiln-concourse-tasks.git
      private_key: ((github.ssh_key))

  - name: p-runtime
    type: git
    source:
      uri: git@github.com:pivotal-cf/p-runtime.git
      branch: main
      private_key: ((github.ssh_key))
      paths:
        - Kilnfile

resource_types:
- name: git
  type: docker-image
  source:
    repository: concourse/git-resource
    tag: ubuntu

- name: pcf-pool

  type: docker-image
  source:
    repository: cftoolsmiths/toolsmiths-envs-resource

- name: pull-request
  type: docker-image
  source:
    repository: cryogenics/pr-queue-resource

jobs:
  - name: nfs-security-scan
    plan:
      - in_parallel:
          - get: persi-ci
          - get: nfs-volume-release
            trigger: true
      - task: build
        file: persi-ci/scripts/ci/security-scan.build.yml
        params:
          PATHS: "src/code.cloudfoundry.org/nfsv3driver/:src/code.cloudfoundry.org/nfsbroker/"
          RELEASE_DIR: nfs-volume-release
        input_mapping:
          release-dir: nfs-volume-release

  - name: nfsdriver-unit
    public: true
    plan:
      - in_parallel:
          - get: nfs-volume-release-concourse-tasks
            params:
              submodules: none
          - get: nfs-volume-release
            trigger: true
      - task: build
        file: nfs-volume-release-concourse-tasks/scripts/ci/run_driver_unit.build.yml

  - name: nfsbroker-tests
    public: true
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: nfs-volume-release-concourse-tasks
              params:
                submodules: none
            - get: nfs-volume-release
              trigger: true
            - get: credhub
      - task: run-test
        file: nfs-volume-release-concourse-tasks/scripts/ci/run_broker_integration.build.yml

  - name: nfs-volume-release-job-tests
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: persi-ci
            - get: nfs-volume-release-concourse-tasks
            - get: mapfs-release
            - get: nfs-volume-release
              trigger: true
      - task: rspec
        file: persi-ci/scripts/ci/run-rspec.build.yml
        input_mapping:
          test-repo: nfs-volume-release
      - task: bosh-release-test
        attempts: 3
        file: nfs-volume-release-concourse-tasks/scripts/ci/run_bosh_release_tests.build.yml
        privileged: true

  - name: nfsdriver-integration
    serial: true
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: persi-ci
            - get: docker_driver_integration_tests
            - get: nfs-volume-release-concourse-tasks
              params:
                submodules: none
            - get: nfs-volume-release
              passed:
                - nfsdriver-unit
                - nfsbroker-tests
              trigger: true
            - get: mapfs-release
              trigger: true
      - in_parallel:
          fail_fast: true
          steps:
            - task: run_docker_driver_integration_tests
              file: nfs-volume-release-concourse-tasks/scripts/ci/run_docker_driver_integration_tests.build.yml
              privileged: true
              params:
                TEST_PACKAGE: docker_driver_integration_tests/
            - task: run_docker_driver_lazy_unmount_integration_tests
              file: nfs-volume-release-concourse-tasks/scripts/ci/run_docker_driver_integration_tests.build.yml
              privileged: true
              params:
                TEST_PACKAGE: docker_driver_integration_tests/lazy_unmount
            - task: run_driver_broker_compatibility_tests
              privileged: true
              input_mapping:
                director-state: bbl-state
              params:
                TEST_PACKAGE: docker_driver_integration_tests/compatibility
              file: nfs-volume-release-concourse-tasks/scripts/ci/run_docker_driver_integration_tests.build.yml

  - name: claim-env
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: persi-ci
            - get: nfs-volume-release
              trigger: true
              passed:
                - nfsdriver-integration
                - nfs-volume-release-job-tests
            - get: mapfs-release
              trigger: true
      - put: smith-env
        params:
          action: claim

      - task: output-env-details
        file: persi-ci/scripts/ci/claim-pooled-env.build.yml
        input_mapping:
          pooled-env: smith-env

  - name: deploy-cf
    public: true
    build_logs_to_retain: 100
    on_failure: *on_failure_unclaim
    on_error: *on_error_unclaim
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: smith-env

              passed: [ claim-env ]
              trigger: true
            - get: cf-deployment-concourse-tasks
            - get: cf-deployment
            - get: persi-ci
            - get: nfs-volume-release
              passed: [ claim-env ]
            - get: mapfs-release
              passed: [ claim-env ]
      - task: bosh-deploy

        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cfpersi/lts-smith
              tag: latest
          inputs:
            - name: nfs-volume-release
            - name: persi-ci
            - name: mapfs-release
            - name: smith-env
          params:
            TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
          run:
            path: bash
            args:
              - -exc
              - |
                BOSH_ENV_NAME=$(cat smith-env/name)
                export env=$BOSH_ENV_NAME
                eval "$(smith -e $BOSH_ENV_NAME bosh)"
                export BOSH_DEPLOYMENT=$(smith bosh deployments -- --column=Name --json | jq -r ."Tables[0].Rows[0].name")
                pushd nfs-volume-release
                  bosh create-release
                  bosh upload-release
                  bosh manifest > /tmp/cf.yml
                popd
                bosh deploy -n /tmp/cf.yml \
                -o persi-ci/operations/pas/use-latest-releases.yml \
                -o persi-ci/operations/pas/nfs-ldap-pas-mixin.yml \
                -o persi-ci/operations/pas/remove-paths-from-releases.yml
                bosh run-errand nfsbrokerpush

  - name: pats-nfs-ldap-ephemeral-environment
    on_failure: *on_failure_unclaim
    on_error: *on_error_unclaim
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: cf-volume-services-acceptance-tests
            - get: persi-ci
            - get: smith-env

              passed: [ deploy-cf ]
              trigger: true
            - get: nfs-volume-release
              passed: [ deploy-cf ]
            - get: mapfs-release
              passed: [ deploy-cf ]
      - task: generate-pats-config-nfs

        file: persi-ci/scripts/ci/generate_pats_config_pas.build.yml
        params:
          CF_USERNAME: admin
          BIND_CONFIG: '["{\"username\":\"user1000\",\"password\":\"secret\"}"]'
          CREATE_CONFIG: '{\"share\":\"mysql.service.cf.internal/export/users\"}'
          DISALLOWED_LDAP_BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
          PLAN_NAME: Existing
          SERVICE_NAME: nfs
          TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
        output_mapping:
          pats-config: nfs-pats-config
      - in_parallel:
          fail_fast: true
          steps:
            - task: run-pats-nfs-ephemeral
              input_mapping:
                pats-config: nfs-pats-config
              file: persi-ci/scripts/ci/run-pats.build.yml
              attempts: 3
              params:
                TEST_DOCKER_PORA: true

  - name: pats-nfs-ldap-legacy-ephemeral-environment
    on_failure: *on_failure_unclaim
    on_error: *on_error_unclaim
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: cf-volume-services-acceptance-tests
            - get: persi-ci
            - get: smith-env

              passed: [ deploy-cf ]
              trigger: true
            - get: nfs-volume-release
              passed: [ deploy-cf ]
            - get: mapfs-release
              passed: [ deploy-cf ]
      - task: generate-pats-config-nfs

        file: persi-ci/scripts/ci/generate_pats_config_pas.build.yml
        params:
          CF_USERNAME: admin
          BIND_CONFIG: '["{\"username\":\"user1000\",\"password\":\"secret\"}"]'
          CREATE_CONFIG: '{\"share\":\"mysql.service.cf.internal/export/users\"}'
          DISALLOWED_LDAP_BIND_CONFIG: '{\"uid\":\"1000\",\"gid\":\"1000\"}'
          PLAN_NAME: Existing
          SERVICE_NAME: nfs-legacy
          TOOLSMITHS_API_TOKEN: ((toolsmiths.api_token))
        output_mapping:
          pats-config: nfs-pats-config
      - in_parallel:
          fail_fast: true
          steps:
            - task: run-pats-nfs-ephemeral
              input_mapping:
                pats-config: nfs-pats-config
              file: persi-ci/scripts/ci/run-pats.build.yml
              attempts: 3
              params:
                TEST_DOCKER_PORA: true

  - name: unclaim-env
    plan:
      - get: smith-env

        passed:
          - pats-nfs-ldap-legacy-ephemeral-environment
          - pats-nfs-ldap-ephemeral-environment
        trigger: true
      - put: smith-env
        params:
          action: unclaim
          env_file: smith-env/metadata


  - name: manual-bump-nfs-patch
    serial_groups:
      - nfs-version
    plan:
      - get: nfs-volume-version
        resource: nfsvolume-version
        params:
          bump: final
      - put: nfsvolume-version
        params:
          bump: patch

  - name: merge-pr
    plan:
    - get: nfs-volume-release
      trigger: true
      passed:
      - pats-nfs-ldap-legacy-ephemeral-environment
      - pats-nfs-ldap-ephemeral-environment
    - put: nfs-volume-release
      params:
        merge: true
        repository: nfs-volume-release

  - name: shipit-nfs
    serial_groups:
      - nfs-version
    plan:
      - in_parallel:
          fail_fast: true
          steps:
            - get: persi-ci
            - get: nfs-volume-release
              resource: nfs-volume-release-lts
            - get: nfsvolume-version
              params:
                bump: final
            - get: releng-kiln-concourse-tasks
            - get: p-runtime
              params: { submodules: none }
      - task: finalize-release
        file: persi-ci/scripts/ci/finalize_release.build.yml
        params:
          BASE_RELEASE_NAME: nfs-volume
          GIT_USER: ((github.user))
          GIT_EMAIL: ((github.email))
          S3_ACCESS_KEY_ID: ((aws/goshims-uploader.id))
          S3_ACCESS_KEY: ((aws/goshims-uploader.secret))
        input_mapping:
          release: nfs-volume-release
          version: nfsvolume-version
      - task: generate-github-release
        file: persi-ci/scripts/ci/generate_github_release.build.yml
        params:
          BASE_RELEASE_NAME: nfs-volume
        input_mapping:
          release: nfs-volume-release
          version: nfsvolume-version
      - put: nfs-volume-release
        params:
          repository: finalized-release/release
          tag: nfsvolume-version/number
          tag_prefix: v
      - put: github-release-nfs
        params:
          commitish: generated-release/commitish
          name: generated-release/name
          tag: generated-release/version
          globs: []
      - task: create-tarball
        input_mapping:
          release: nfs-volume-release
          version: nfsvolume-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: relintdockerhubpushbot/cf-deployment-concourse-tasks}
          inputs:
          - name: release
          - name: version
          outputs:
          - name: release-tarball-directory
          params:
            BASE_RELEASE_NAME: nfs-volume
          run:
            path: /bin/bash
            args:
            - -ec
            - |
              FINAL_RELEASE_VERSION="$(cat "version/number")"
              pushd release
                bosh -n create-release "releases/nfs-volume/nfs-volume-${FINAL_RELEASE_VERSION}.yml" --tarball="../release-tarball-directory/nfs-volume-release-${FINAL_RELEASE_VERSION}.tgz"
              popd
      - task: upload-release-to-releng
        file: releng-kiln-concourse-tasks/tasks/upload-release/task.yml
        params:
          AWS_ACCESS_KEY_ID: ((access_kiln_fetch_aws_access_key_id))
          AWS_SECRET_ACCESS_KEY: ((access_kiln_fetch_aws_secret_access_key))
      - put: nfsvolume-version
        params:
          bump: patch
